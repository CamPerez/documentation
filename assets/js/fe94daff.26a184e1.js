"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["29610"],{73675:function(e,a,t){t.r(a),t.d(a,{Details:()=>p,toc:()=>m,default:()=>u,Badge:()=>h,Bullet:()=>o,assets:()=>r,frontMatter:()=>i,SpecifiedBy:()=>x,metadata:()=>n,contentTitle:()=>c});var n=JSON.parse('{"id":"types/objects/metadata-candidate","title":"MetadataCandidate","description":"Guest restrictions for each candidate type in a room.","source":"@site/api/types/objects/metadata-candidate.mdx","sourceDirName":"types/objects","slug":"/types/objects/metadata-candidate","permalink":"/api/types/objects/metadata-candidate","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"metadata-candidate","title":"MetadataCandidate"},"sidebar":"schemaSidebar","previous":{"title":"MetadataCancel","permalink":"/api/types/objects/metadata-cancel"},"next":{"title":"MetadataConnection","permalink":"/api/types/objects/metadata-connection"}}'),d=t(85893),s=t(50065),l=t(67294);let i={id:"metadata-candidate",title:"MetadataCandidate"},c=void 0,r={},o=()=>(0,d.jsx)(d.Fragment,{children:(0,d.jsx)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25CF\xa0"})}),x=e=>(0,d.jsxs)(d.Fragment,{children:["Specification",(0,d.jsx)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]}),h=e=>(0,d.jsx)(d.Fragment,{children:(0,d.jsx)("span",{className:e.class,children:e.text})}),p=({dataOpen:e,dataClose:a,children:t,startOpen:n=!1})=>{let[s,i]=(0,l.useState)(n);return(0,d.jsxs)("details",{...s?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,d.jsx)("summary",{onClick:e=>{e.preventDefault(),i(e=>!e)},style:{listStyle:"none"},children:s?e:a}),s&&t]})},m=[{value:"Fields",id:"fields",level:3},{value:'<code>MetadataCandidate.<b>min</b></code><Bullet></Bullet><code><b>Int!</b></code> <Badge class="badge badge--secondary badge--non_null"></Badge> <Badge class="badge badge--secondary "></Badge>',id:"metadatacandidateminint--",level:4},{value:'<code>MetadataCandidate.<b>max</b></code><Bullet></Bullet><code><b>Int!</b></code> <Badge class="badge badge--secondary badge--non_null"></Badge> <Badge class="badge badge--secondary "></Badge>',id:"metadatacandidatemaxint--",level:4},{value:'<code>MetadataCandidate.<b>type</b></code><Bullet></Bullet><code><b>HotelPaxType!</b></code> <Badge class="badge badge--secondary badge--non_null"></Badge> <Badge class="badge badge--secondary "></Badge>',id:"metadatacandidatetypehotelpaxtype--",level:4},{value:"Member Of",id:"member-of",level:3}];function b(e){let a={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(a.p,{children:"Guest restrictions for each candidate type in a room."}),"\n",(0,d.jsx)(a.pre,{children:(0,d.jsx)(a.code,{className:"language-graphql",children:"type MetadataCandidate {\n  min: Int!\n  max: Int!\n  type: HotelPaxType!\n}\n"})}),"\n",(0,d.jsx)(a.h3,{id:"fields",children:"Fields"}),"\n",(0,d.jsxs)(a.h4,{id:"metadatacandidateminint--",children:[(0,d.jsx)(a.a,{href:"#",children:(0,d.jsxs)("code",{style:{fontWeight:"normal"},children:["MetadataCandidate.",(0,d.jsx)("b",{children:"min"})]})}),(0,d.jsx)(o,{}),(0,d.jsx)(a.a,{href:"/api/types/scalars/int",children:(0,d.jsx)("code",{style:{fontWeight:"normal"},children:(0,d.jsx)("b",{children:"Int!"})})})," ",(0,d.jsx)(h,{class:"badge badge--secondary badge--non_null",text:"non-null"})," ",(0,d.jsx)(h,{class:"badge badge--secondary ",text:"scalar"})]}),"\n",(0,d.jsx)(a.p,{children:"Minimum required number of guest of this type."}),"\n",(0,d.jsxs)(a.h4,{id:"metadatacandidatemaxint--",children:[(0,d.jsx)(a.a,{href:"#",children:(0,d.jsxs)("code",{style:{fontWeight:"normal"},children:["MetadataCandidate.",(0,d.jsx)("b",{children:"max"})]})}),(0,d.jsx)(o,{}),(0,d.jsx)(a.a,{href:"/api/types/scalars/int",children:(0,d.jsx)("code",{style:{fontWeight:"normal"},children:(0,d.jsx)("b",{children:"Int!"})})})," ",(0,d.jsx)(h,{class:"badge badge--secondary badge--non_null",text:"non-null"})," ",(0,d.jsx)(h,{class:"badge badge--secondary ",text:"scalar"})]}),"\n",(0,d.jsx)(a.p,{children:"Maximum number of guest of this type allowed."}),"\n",(0,d.jsxs)(a.h4,{id:"metadatacandidatetypehotelpaxtype--",children:[(0,d.jsx)(a.a,{href:"#",children:(0,d.jsxs)("code",{style:{fontWeight:"normal"},children:["MetadataCandidate.",(0,d.jsx)("b",{children:"type"})]})}),(0,d.jsx)(o,{}),(0,d.jsx)(a.a,{href:"/api/types/enums/hotel-pax-type",children:(0,d.jsx)("code",{style:{fontWeight:"normal"},children:(0,d.jsx)("b",{children:"HotelPaxType!"})})})," ",(0,d.jsx)(h,{class:"badge badge--secondary badge--non_null",text:"non-null"})," ",(0,d.jsx)(h,{class:"badge badge--secondary ",text:"enum"})]}),"\n",(0,d.jsx)(a.p,{children:"Candidate classification type.(Adult, Child, Infant)"}),"\n",(0,d.jsx)(a.h3,{id:"member-of",children:"Member Of"}),"\n",(0,d.jsxs)(a.p,{children:[(0,d.jsx)(a.a,{href:"/api/types/objects/reviwed-pax-type-range-in-room-candidates",children:(0,d.jsx)(a.code,{children:"ReviwedPaxTypeRangeInRoomCandidates"})}),"  ",(0,d.jsx)(h,{class:"badge badge--secondary badge--relation",text:"object"})]})]})}function u(e={}){let{wrapper:a}={...(0,s.a)(),...e.components};return a?(0,d.jsx)(a,{...e,children:(0,d.jsx)(b,{...e})}):b(e)}},50065:function(e,a,t){t.d(a,{Z:()=>i,a:()=>l});var n=t(67294);let d={},s=n.createContext(d);function l(e){let a=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);