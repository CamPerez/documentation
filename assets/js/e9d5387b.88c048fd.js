/*! For license information please see e9d5387b.88c048fd.js.LICENSE.txt */
"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[22854],{21020:(e,r,n)=>{var i=n(96540),s=Symbol.for("react.element"),o=Symbol.for("react.fragment"),l=Object.prototype.hasOwnProperty,c=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,t={key:!0,ref:!0,__self:!0,__source:!0};function u(e,r,n){var i,o={},u=null,p=null;for(i in void 0!==n&&(u=""+n),void 0!==r.key&&(u=""+r.key),void 0!==r.ref&&(p=r.ref),r)l.call(r,i)&&!t.hasOwnProperty(i)&&(o[i]=r[i]);if(e&&e.defaultProps)for(i in r=e.defaultProps)void 0===o[i]&&(o[i]=r[i]);return{$$typeof:s,type:e,key:u,ref:p,props:o,_owner:c.current}}r.Fragment=o,r.jsx=u,r.jsxs=u},28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>c});var i=n(96540);const s={},o=i.createContext(s);function l(e){const r=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(o.Provider,{value:r},e.children)}},74848:(e,r,n)=>{e.exports=n(21020)},76089:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Price_Helpers/PriceHelpers","title":"PriceHelpers","description":"Helpers for Mapping Supplier Price Data","source":"@site/docs/apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Price_Helpers/PriceHelpers.mdx","sourceDirName":"apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Price_Helpers","slug":"/apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Price_Helpers/PriceHelpers","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Price_Helpers/PriceHelpers","draft":false,"unlisted":false,"editUrl":"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Price_Helpers/PriceHelpers.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Policies Helpers","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Policies_Helpers/PoliciesHelpers"},"next":{"title":"Access","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/access"}}');var s=n(74848),o=n(28453);const l={},c=void 0,t={},u=[{value:"<strong>Helpers for Mapping Supplier Price Data</strong>",id:"helpers-for-mapping-supplier-price-data",level:3},{value:"<strong>BuildNetPrice</strong>",id:"buildnetprice",level:4},{value:"<strong>BuildGrossWithCommissionPrice</strong>",id:"buildgrosswithcommissionprice",level:4},{value:"<strong>BuildGrossUnknownNetPrice</strong>",id:"buildgrossunknownnetprice",level:4},{value:"<strong>BuildNetGrossPrice</strong>",id:"buildnetgrossprice",level:4}];function p(e){const r={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h3,{id:"helpers-for-mapping-supplier-price-data",children:(0,s.jsx)(r.strong,{children:"Helpers for Mapping Supplier Price Data"})}),"\n",(0,s.jsx)(r.p,{children:"To accurately map prices data to our internal model, you can use one of the following helper methods depending on the supplier data format:"}),"\n",(0,s.jsx)(r.h4,{id:"buildnetprice",children:(0,s.jsx)(r.strong,{children:"BuildNetPrice"})}),"\n",(0,s.jsx)(r.p,{children:"Use this method when the supplier provides a net price with no commission."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:'public static Price BuildNetPrice(Currency currency, double net, double minimumPrice)\n{\n  return new Price(\n    currency, \n    Price.CalculateBindingFromMinimumPrice(minimumPrice), \n    net, \n    net, \n    minimumSellingPrice: minimumPrice);\n}\n\n//Example of how should it be implemented:\n\n// Sample data\nCurrency currency = Currency.USD; // Example enum value\ndouble netAmount = supplier.NetPrice; // "150.00" Net price given by the supplier\ndouble mspAmount = supplier.MinimumSellingPrice; // "170.00" Minimum selling price given by the supplier\n\n// Method call\n\nPrice price = Price.BuildNetPrice(currency, netAmount, mspAmount);\n'})}),"\n",(0,s.jsx)(r.h4,{id:"buildgrosswithcommissionprice",children:(0,s.jsx)(r.strong,{children:"BuildGrossWithCommissionPrice"})}),"\n",(0,s.jsx)(r.p,{children:"Use this method when the supplier provides gross price with commission."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:'public static Price BuildGrossWithCommissionPrice(\n  Currency currency,\n  double gross,\n  double commission,\n  double minimumPrice,\n  double priceSurchargesIncluded = 0.0)\n{\n  if (commission > 1.0 || commission < 0.0)\n  {\n    throw new ArgumentException("Commission should have a value between 0 and 1");\n  }\n  double net = Price.CalculateNetFromGrossAndCommission(gross - priceSurchargesIncluded, commission) + priceSurchargesIncluded;\n  return new Price(currency, Price.CalculateBindingFromMinimumPrice(minimumPrice), net, gross, minimumSellingPrice: minimumPrice);\n}\n\n//Example of how should it be implemented:\n\n// Sample data\nCurrency currency = Currency.USD; // Example enum value\ndouble grossAmount = supplier.GrossPrice; // "170.00" Gross price given by the supplier\ndouble commission = supplier.Commisison; // "0.1176" Commission fraction given by the supplier\ndouble minimumPrice = supplier.MinimumSellingPrice; // "170.00" Minimum selling price given by the supplier\n\n// Method call\n\nPrice price = Price.BuildGrossWithCommissionPrice(currency, grossAmount, commission, minimumPrice);\n'})}),"\n",(0,s.jsx)(r.h4,{id:"buildgrossunknownnetprice",children:(0,s.jsx)(r.strong,{children:"BuildGrossUnknownNetPrice"})}),"\n",(0,s.jsx)(r.p,{children:"Use this method when the supplier does return the gross without commission."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:'public static Price BuildGrossUnknownNetPrice(\n  Currency currency,\n  double gross,\n  double minimumPrice)\n{\n  return new Price(\n    currency, \n    Price.CalculateBindingFromMinimumPrice(minimumPrice), \n    0.0, \n    gross, \n    false, \n    minimumPrice);\n}\n\n// Example of how should it be implemented:\n\n// Sample data\nCurrency currency = Currency.USD; // Example enum value\ndouble grossAmount = supplier.GrossPrice; // "170.00" Gross price given by the supplier\ndouble minimumPrice = supplier.MinimumSellingPrice; // "170.00" Minimum selling price given by the supplier\n\n// Method call\nPrice price = Price.BuildGrossUnknownNetPrice(currency, grossAmount, minimumPrice);\n'})}),"\n",(0,s.jsx)(r.h4,{id:"buildnetgrossprice",children:(0,s.jsx)(r.strong,{children:"BuildNetGrossPrice"})}),"\n",(0,s.jsx)(r.p,{children:"Use this method when the supplier returns both net and gross prices."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:'public static Price BuildNetGrossPrice(\n  Currency currency,\n  double net,\n  double gross,\n  double minimumPrice)\n{\n  return new Price(\n    currency, \n    Price.CalculateBindingFromMinimumPrice(minimumPrice), \n    net, \n    gross, \n    minimumSellingPrice: minimumPrice);\n}\n\n// Example of how should it be implemented:\n\n// Sample data\nCurrency currency = Currency.USD; // Example enum value\ndouble grossAmount = supplier.GrossPrice; // "170.00" Gross price given by the supplier\ndouble netAmount = supplier.NetPrice; // "150.00" Net price given by the supplier\ndouble minimumPrice = supplier.MinimumSellingPrice; // "170.00" Minimum selling price given by the supplier\n\n// Method call\nPrice price = Price.BuildNetGrossPrice(currency, grossAmount, minimumPrice);\n'})})]})}function m(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);