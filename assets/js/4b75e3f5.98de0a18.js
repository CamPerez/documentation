/*! For license information please see 4b75e3f5.98de0a18.js.LICENSE.txt */
"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[76994],{17807:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.price","title":"Price","description":"Namespace: Connectors.Core.Domain","source":"@site/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.price.md","sourceDirName":"apis/for-sellers/connectors-pull-developers-api/API_Reference","slug":"/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.price","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.price","draft":false,"unlisted":false,"editUrl":"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.price.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"PaymentType","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.paymenttype"},"next":{"title":"ProviderAudit","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.provideraudit.provideraudit"}}');var i=n(74848),c=n(28453);const o={},l="Price",t={},d=[{value:"Properties",id:"properties",level:2},{value:"<a></a><strong>Binding</strong>",id:"binding",level:3},{value:"Property Value",id:"property-value",level:4},{value:"<a></a><strong>Currency</strong>",id:"currency",level:3},{value:"Property Value",id:"property-value-1",level:4},{value:"<a></a><strong>Gross</strong>",id:"gross",level:3},{value:"Property Value",id:"property-value-2",level:4},{value:"<a></a><strong>MinimumSellingPrice</strong>",id:"minimumsellingprice",level:3},{value:"Property Value",id:"property-value-3",level:4},{value:"<a></a><strong>Net</strong>",id:"net",level:3},{value:"Property Value",id:"property-value-4",level:4},{value:"<a></a><strong>NetSpecified</strong>",id:"netspecified",level:3},{value:"Property Value",id:"property-value-5",level:4},{value:"Constructors",id:"constructors",level:2},{value:"<a></a><strong>Price(Currency, Boolean, Double, Double, Boolean, Double)</strong>",id:"pricecurrency-boolean-double-double-boolean-double",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Exceptions",id:"exceptions",level:4},{value:"Methods",id:"methods",level:2},{value:"<a></a><strong>BuildGrossUnknownNetPrice(Currency, Double, Double)</strong>",id:"buildgrossunknownnetpricecurrency-double-double",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"<a></a><strong>BuildGrossWithCommissionPrice(Currency, Double, Double, Double, Double)</strong>",id:"buildgrosswithcommissionpricecurrency-double-double-double-double",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Exceptions",id:"exceptions-1",level:4},{value:"<a></a><strong>BuildNetGrossPrice(Currency, Double, Double, Double)</strong>",id:"buildnetgrosspricecurrency-double-double-double",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<a></a><strong>BuildNetPrice(Currency, Double, Double)</strong>",id:"buildnetpricecurrency-double-double",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<a></a><strong>CalculateBindingFromMinimumPrice(Double)</strong>",id:"calculatebindingfromminimumpricedouble",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-4",level:4},{value:"<a></a><strong>CalculateNetFromGrossAndCommission(Double, Double)</strong>",id:"calculatenetfromgrossandcommissiondouble-double",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-5",level:4}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"price",children:"Price"})}),"\n",(0,i.jsx)(r.p,{children:"Namespace: Connectors.Core.Domain"}),"\n",(0,i.jsx)(r.p,{children:"Represents pricing details, including currency, net price, gross price, and additional pricing attributes."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public class Price\n"})}),"\n",(0,i.jsxs)(r.p,{children:["Inheritance ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"})," \u2192 ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.price",children:"Price"})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Remarks:"})}),"\n",(0,i.jsx)(r.p,{children:"This class defines various components of pricing:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"./connectors.core.domain.price#currency",children:"Price.Currency"})," specifies the currency in ISO 4217 format (e.g., USD, EUR)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"./connectors.core.domain.price#net",children:"Price.Net"})," is the price paid by the buyer to the seller."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"./connectors.core.domain.price#gross",children:"Price.Gross"})," includes the net price plus the buyer's commission."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"./connectors.core.domain.price#minimumsellingprice",children:"Price.MinimumSellingPrice"})," defines the lowest price at which the product can be sold.\nAdditional attributes determine whether the price is binding and if the net price is explicitly specified."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(r.h3,{id:"binding",children:[(0,i.jsx)("a",{id:"properties-binding"}),(0,i.jsx)(r.strong,{children:"Binding"})]}),"\n",(0,i.jsx)(r.p,{children:"Indicates whether the price is binding."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public bool Binding { get; set; }\n"})}),"\n",(0,i.jsx)(r.h4,{id:"property-value",children:"Property Value"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Remarks:"})}),"\n",(0,i.jsxs)(r.p,{children:["If set to ",(0,i.jsx)(r.code,{children:"true"}),", the price must be adhered to, meaning it is mandatory to sell\nat or above the specified amount, either the gross price or the minimum selling price, if provided."]}),"\n",(0,i.jsxs)(r.h3,{id:"currency",children:[(0,i.jsx)("a",{id:"properties-currency"}),(0,i.jsx)(r.strong,{children:"Currency"})]}),"\n",(0,i.jsx)(r.p,{children:"The currency of the price, represented in ISO 4217 format (e.g., USD, EUR)."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public Currency Currency { get; set; }\n"})}),"\n",(0,i.jsx)(r.h4,{id:"property-value-1",children:"Property Value"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"./connectors.core.domain.currency",children:"Currency"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Remarks:"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.price#currency",children:"Price.Currency"})," property defines the currency code for the pricing details\nin compliance with the ISO 4217 standard."]}),"\n",(0,i.jsxs)(r.h3,{id:"gross",children:[(0,i.jsx)("a",{id:"properties-gross"}),(0,i.jsx)(r.strong,{children:"Gross"})]}),"\n",(0,i.jsx)(r.p,{children:"The gross price, which includes the net price and the buyer's commission."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public double Gross { get; set; }\n"})}),"\n",(0,i.jsx)(r.h4,{id:"property-value-2",children:"Property Value"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Remarks:"})}),"\n",(0,i.jsx)(r.p,{children:"If the net and gross prices are equal, it indicates no commission is applied."}),"\n",(0,i.jsxs)(r.h3,{id:"minimumsellingprice",children:[(0,i.jsx)("a",{id:"properties-minimumsellingprice"}),(0,i.jsx)(r.strong,{children:"MinimumSellingPrice"})]}),"\n",(0,i.jsx)(r.p,{children:"The minimum selling price."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public double MinimumSellingPrice { get; set; }\n"})}),"\n",(0,i.jsx)(r.h4,{id:"property-value-3",children:"Property Value"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Remarks:"})}),"\n",(0,i.jsx)(r.p,{children:"This represents the lowest allowable price at which the buyer can sell the supplier's product\nto their customers. It ensures compliance with supplier pricing rules."}),"\n",(0,i.jsxs)(r.h3,{id:"net",children:[(0,i.jsx)("a",{id:"properties-net"}),(0,i.jsx)(r.strong,{children:"Net"})]}),"\n",(0,i.jsx)(r.p,{children:"The net price paid by the buyer to the seller."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public double Net { get; set; }\n"})}),"\n",(0,i.jsx)(r.h4,{id:"property-value-4",children:"Property Value"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Remarks:"})}),"\n",(0,i.jsx)(r.p,{children:"This represents the cost without including any commissions or markups."}),"\n",(0,i.jsxs)(r.h3,{id:"netspecified",children:[(0,i.jsx)("a",{id:"properties-netspecified"}),(0,i.jsx)(r.strong,{children:"NetSpecified"})]}),"\n",(0,i.jsx)(r.p,{children:"Indicates whether the net price is explicitly specified."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public bool NetSpecified { get; set; }\n"})}),"\n",(0,i.jsx)(r.h4,{id:"property-value-5",children:"Property Value"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Remarks:"})}),"\n",(0,i.jsxs)(r.p,{children:["This flag is used to determine if the ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.price#net",children:"Price.Net"})," value has been provided in the pricing details."]}),"\n",(0,i.jsx)(r.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsxs)(r.h3,{id:"pricecurrency-boolean-double-double-boolean-double",children:[(0,i.jsx)("a",{id:"constructors-.ctor"}),(0,i.jsx)(r.strong,{children:"Price(Currency, Boolean, Double, Double, Boolean, Double)"})]}),"\n",(0,i.jsxs)(r.p,{children:["Initializes a new instance of the ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.price",children:"Price"})," class with specified details."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public Price(Currency currency, bool binding, double net, double gross, bool netSpecified, double minimumSellingPrice)\n"})}),"\n",(0,i.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"currency"})," ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.currency",children:"Currency"}),(0,i.jsx)("br",{}),"\nThe currency of the price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"binding"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{}),"\nIndicates whether the price is binding."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"net"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe net price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"gross"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe gross price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"netSpecified"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{}),"\nIndicates whether the net price is specified."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"minimumSellingPrice"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe minimum selling price."]}),"\n",(0,i.jsx)(r.h4,{id:"exceptions",children:"Exceptions"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),(0,i.jsx)("br",{}),"\nThrown when:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"The net price is greater than the gross price."}),"\n",(0,i.jsx)(r.li,{children:"Binding is true but the minimum selling price is 0."}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)(r.h3,{id:"buildgrossunknownnetpricecurrency-double-double",children:[(0,i.jsx)("a",{id:"methods-buildgrossunknownnetprice"}),(0,i.jsx)(r.strong,{children:"BuildGrossUnknownNetPrice(Currency, Double, Double)"})]}),"\n",(0,i.jsx)(r.p,{children:"Creates a price instance with a gross price, minimum selling price, and an unknown net price."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public static Price BuildGrossUnknownNetPrice(Currency currency, double gross, double minimumPrice)\n"})}),"\n",(0,i.jsx)(r.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"currency"})," ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.currency",children:"Currency"}),(0,i.jsx)("br",{}),"\nThe currency of the price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"gross"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe gross price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"minimumPrice"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe minimum selling price."]}),"\n",(0,i.jsx)(r.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(r.p,{children:["A new ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.price",children:"Price"})," instance."]}),"\n",(0,i.jsxs)(r.h3,{id:"buildgrosswithcommissionpricecurrency-double-double-double-double",children:[(0,i.jsx)("a",{id:"methods-buildgrosswithcommissionprice"}),(0,i.jsx)(r.strong,{children:"BuildGrossWithCommissionPrice(Currency, Double, Double, Double, Double)"})]}),"\n",(0,i.jsx)(r.p,{children:"Creates a price instance with a gross price, commission, minimum selling price, and included surcharges."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public static Price BuildGrossWithCommissionPrice(Currency currency, double gross, double commission, double minimumPrice, double priceSurchargesIncluded)\n"})}),"\n",(0,i.jsx)(r.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"currency"})," ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.currency",children:"Currency"}),(0,i.jsx)("br",{}),"\nThe currency of the price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"gross"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe gross price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"commission"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe commission as a fraction (0-1)."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"minimumPrice"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe minimum selling price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"priceSurchargesIncluded"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nOptional. The additional surcharges included in the gross price."]}),"\n",(0,i.jsx)(r.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(r.p,{children:["A new ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.price",children:"Price"})," instance."]}),"\n",(0,i.jsx)(r.h4,{id:"exceptions-1",children:"Exceptions"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),(0,i.jsx)("br",{}),"\nThrown when the commission is not between 0 and 1."]}),"\n",(0,i.jsxs)(r.h3,{id:"buildnetgrosspricecurrency-double-double-double",children:[(0,i.jsx)("a",{id:"methods-buildnetgrossprice"}),(0,i.jsx)(r.strong,{children:"BuildNetGrossPrice(Currency, Double, Double, Double)"})]}),"\n",(0,i.jsx)(r.p,{children:"Creates a price instance with specified net, gross, and minimum selling prices."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public static Price BuildNetGrossPrice(Currency currency, double net, double gross, double minimumPrice)\n"})}),"\n",(0,i.jsx)(r.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"currency"})," ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.currency",children:"Currency"}),(0,i.jsx)("br",{}),"\nThe currency of the price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"net"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe net price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"gross"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe gross price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"minimumPrice"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe minimum selling price."]}),"\n",(0,i.jsx)(r.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsxs)(r.p,{children:["A new ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.price",children:"Price"})," instance."]}),"\n",(0,i.jsxs)(r.h3,{id:"buildnetpricecurrency-double-double",children:[(0,i.jsx)("a",{id:"methods-buildnetprice"}),(0,i.jsx)(r.strong,{children:"BuildNetPrice(Currency, Double, Double)"})]}),"\n",(0,i.jsx)(r.p,{children:"Creates a price instance with a specified net price and minimum selling price."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public static Price BuildNetPrice(Currency currency, double net, double minimumPrice)\n"})}),"\n",(0,i.jsx)(r.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"currency"})," ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.currency",children:"Currency"}),(0,i.jsx)("br",{}),"\nThe currency of the price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"net"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe net price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"minimumPrice"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe minimum selling price."]}),"\n",(0,i.jsx)(r.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsxs)(r.p,{children:["A new ",(0,i.jsx)(r.a,{href:"./connectors.core.domain.price",children:"Price"})," instance."]}),"\n",(0,i.jsxs)(r.h3,{id:"calculatebindingfromminimumpricedouble",children:[(0,i.jsx)("a",{id:"methods-calculatebindingfromminimumprice"}),(0,i.jsx)(r.strong,{children:"CalculateBindingFromMinimumPrice(Double)"})]}),"\n",(0,i.jsx)(r.p,{children:"Determines whether the price is binding based on the minimum selling price."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"internal static bool CalculateBindingFromMinimumPrice(double minimumPrice)\n"})}),"\n",(0,i.jsx)(r.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"minimumPrice"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe minimum selling price."]}),"\n",(0,i.jsx)(r.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(r.p,{children:"True if the price is binding; otherwise, false."}),"\n",(0,i.jsxs)(r.h3,{id:"calculatenetfromgrossandcommissiondouble-double",children:[(0,i.jsx)("a",{id:"methods-calculatenetfromgrossandcommission"}),(0,i.jsx)(r.strong,{children:"CalculateNetFromGrossAndCommission(Double, Double)"})]}),"\n",(0,i.jsx)(r.p,{children:"Calculates the net price from a given gross price and commission."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"public static double CalculateNetFromGrossAndCommission(double gross, double commission)\n"})}),"\n",(0,i.jsx)(r.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"gross"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe gross price."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"commission"})," ",(0,i.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.double",children:"Double"}),(0,i.jsx)("br",{}),"\nThe commission as a fraction (0-1)."]}),"\n",(0,i.jsx)(r.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsx)(r.p,{children:"The calculated net price."})]})}function u(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},21020:(e,r,n)=>{var s=n(96540),i=Symbol.for("react.element"),c=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,l=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,t={key:!0,ref:!0,__self:!0,__source:!0};function d(e,r,n){var s,c={},d=null,a=null;for(s in void 0!==n&&(d=""+n),void 0!==r.key&&(d=""+r.key),void 0!==r.ref&&(a=r.ref),r)o.call(r,s)&&!t.hasOwnProperty(s)&&(c[s]=r[s]);if(e&&e.defaultProps)for(s in r=e.defaultProps)void 0===c[s]&&(c[s]=r[s]);return{$$typeof:i,type:e,key:d,ref:a,props:c,_owner:l.current}}r.Fragment=c,r.jsx=d,r.jsxs=d},74848:(e,r,n)=>{e.exports=n(21020)},28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>l});var s=n(96540);const i={},c=s.createContext(i);function o(e){const r=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(c.Provider,{value:r},e.children)}}}]);