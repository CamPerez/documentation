/*! For license information please see 1d3eb260.4cc2551a.js.LICENSE.txt */
"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[34301],{13454:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"apis/for-sellers/connectors-pull-developers-api/Advanced_Use/Content_Extensions","title":"Content Extensions","description":"MultiSerializer","source":"@site/docs/apis/for-sellers/connectors-pull-developers-api/Advanced_Use/Content_Extensions.mdx","sourceDirName":"apis/for-sellers/connectors-pull-developers-api/Advanced_Use","slug":"/apis/for-sellers/connectors-pull-developers-api/Advanced_Use/Content_Extensions","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/Advanced_Use/Content_Extensions","draft":false,"unlisted":false,"editUrl":"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/connectors-pull-developers-api/Advanced_Use/Content_Extensions.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Content Extensions","sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Booking Extensions","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/Advanced_Use/Booking_Extensions"},"next":{"title":"Quickstart","permalink":"/docs/apis/for-sellers/inventory-push-graphql-api/quickstart"}}');var s=i(74848),t=i(28453);const o={title:"Content Extensions",sidebar_position:3},a=void 0,l={},c=[{value:"MultiSerializer",id:"multiserializer",level:2},{value:"Basic Setup",id:"basic-setup",level:3}];function u(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"multiserializer",children:"MultiSerializer"}),"\n",(0,s.jsx)(n.p,{children:"To use the MultiSerializer, configure it within the operation you need (it is commonly used for small CSV operations)."}),"\n",(0,s.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,s.jsx)(n.p,{children:"Start by configuring the main serializer (e.g., CSV):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In this case, a ",(0,s.jsx)(n.strong,{children:"CsvConfigFactory"})," class is created to establish the ",(0,s.jsx)(n.strong,{children:"CSV configuration"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public static class CsvConfigFactory\n{\n    // Returns a default configuration for the CsvSerializer\n    public static CsvSerializerConfiguration GetDefaultConfiguration()\n    {\n        // CsvSerializerConfiguration is a class defined in Connectors\n        return new CsvSerializerConfiguration\n        {\n            Delimiter = ",",\n            HasHeaderRecord = true,\n            IgnoreBlankLines = true\n        };\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Then use it in the operations ",(0,s.jsx)(n.strong,{children:"Extensions"})," class:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"var csvConfiguration = CsvSerializerConfiguration.GetDefaultConfiguration();\n\nservices\n    .AddMultiSerializer(new CsvSerializer<FtpRequest, IEnumerable<Hotel>>(csvConfiguration))\n    .AddPreSerializer<CompressionSerializer, CompressionSerializerConfiguration>(o => {\n        o.CompressionType = CompressionType.TarGZ;\n        o.FileName = TgxPlatform.HOTEL_LIST;\n    });\n\nservices.AddHotelListFullOperation<HotelListFullOperation, IEnumerable<Hotel>, AccessModel>(\n    TgxPlatform.Name, configuration);\nAdvanced PreSerializer Usage\n"})}),"\n",(0,s.jsx)(n.p,{children:"You can also dynamically select a file inside a compressed archive:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"services\n    .AddMultiSerializer(new CsvSerializer<FtpRequest, IEnumerable<Hotel>>(csvConfiguration))\n    .AddPreSerializer<CompressionSerializer, CompressionSerializerConfiguration>(o => {\n        o.CompressionType = CompressionType.TarGZ;\n        o.SelectFileFunction = fileList => {\n            foreach (var fileName in fileList)\n            {\n                if (fileName.Contains(DateTime.Now.ToShortDateString()))\n                    return fileName;\n            }\n            // FILE NOT FOUND\n            return null;\n        };\n    });\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},21020:(e,n,i)=>{var r=i(96540),s=Symbol.for("react.element"),t=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,i){var r,t={},c=null,u=null;for(r in void 0!==i&&(c=""+i),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(u=n.ref),n)o.call(n,r)&&!l.hasOwnProperty(r)&&(t[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===t[r]&&(t[r]=n[r]);return{$$typeof:s,type:e,key:c,ref:u,props:t,_owner:a.current}}n.Fragment=t,n.jsx=c,n.jsxs=c},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var r=i(96540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}},74848:(e,n,i)=>{e.exports=i(21020)}}]);