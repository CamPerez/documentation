"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["30589"],{5292:function(e,n,t){t.r(n),t.d(n,{Details:()=>p,toc:()=>f,default:()=>g,Badge:()=>h,Bullet:()=>d,assets:()=>c,frontMatter:()=>s,SpecifiedBy:()=>u,metadata:()=>i,contentTitle:()=>o});var i=JSON.parse('{"id":"operations/directives/include","title":"include","description":"Directs the executor to include this field or fragment only when the if argument is true.","source":"@site/api/operations/directives/include.mdx","sourceDirName":"operations/directives","slug":"/operations/directives/include","permalink":"/api/operations/directives/include","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"include","title":"include"},"sidebar":"schemaSidebar","previous":{"title":"Schema Documentation","permalink":"/api/"},"next":{"title":"skip","permalink":"/api/operations/directives/skip"}}'),r=t(85893),l=t(50065),a=t(67294);let s={id:"include",title:"include"},o=void 0,c={},d=()=>(0,r.jsx)(r.Fragment,{children:(0,r.jsx)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25CF\xa0"})}),u=e=>(0,r.jsxs)(r.Fragment,{children:["Specification",(0,r.jsx)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]}),h=e=>(0,r.jsx)(r.Fragment,{children:(0,r.jsx)("span",{className:e.class,children:e.text})}),p=({dataOpen:e,dataClose:n,children:t,startOpen:i=!1})=>{let[l,s]=(0,a.useState)(i);return(0,r.jsxs)("details",{...l?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,r.jsx)("summary",{onClick:e=>{e.preventDefault(),s(e=>!e)},style:{listStyle:"none"},children:l?e:n}),l&&t]})},f=[{value:"Arguments",id:"arguments",level:3},{value:'<code>include.<b>if</b></code><Bullet></Bullet><code><b>Boolean!</b></code> <Badge class="badge badge--secondary badge--non_null"></Badge> <Badge class="badge badge--secondary "></Badge>',id:"includeifboolean--",level:4}];function m(e){let n={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Directs the executor to include this field or fragment only when the ",(0,r.jsx)(n.code,{children:"if"})," argument is true."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"directive @include(\n  if: Boolean!\n) on \r\n  | FIELD\r\n  | FRAGMENT_SPREAD\r\n  | INLINE_FRAGMENT\n"})}),"\n",(0,r.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.h4,{id:"includeifboolean--",children:[(0,r.jsx)(n.a,{href:"#",children:(0,r.jsxs)("code",{style:{fontWeight:"normal"},children:["include.",(0,r.jsx)("b",{children:"if"})]})}),(0,r.jsx)(d,{}),(0,r.jsx)(n.a,{href:"/api/types/scalars/boolean",children:(0,r.jsx)("code",{style:{fontWeight:"normal"},children:(0,r.jsx)("b",{children:"Boolean!"})})})," ",(0,r.jsx)(h,{class:"badge badge--secondary badge--non_null",text:"non-null"})," ",(0,r.jsx)(h,{class:"badge badge--secondary ",text:"scalar"})]}),"\n",(0,r.jsx)(n.p,{children:"Included when true."})]})}function g(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},50065:function(e,n,t){t.d(n,{Z:()=>s,a:()=>a});var i=t(67294);let r={},l=i.createContext(r);function a(e){let n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);