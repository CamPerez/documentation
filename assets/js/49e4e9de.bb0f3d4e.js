/*! For license information please see 49e4e9de.bb0f3d4e.js.LICENSE.txt */
"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[66502],{13087:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.audit.auditdata-1","title":"AuditData&lt;TStat&gt;","description":"Namespace: Connectors.Core.Domain.Audit","source":"@site/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.audit.auditdata-1.md","sourceDirName":"apis/for-sellers/connectors-pull-developers-api/API_Reference","slug":"/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.audit.auditdata-1","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.audit.auditdata-1","draft":false,"unlisted":false,"editUrl":"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.audit.auditdata-1.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"LegacyErrorCodes","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.advisemessages.legacyerrorcodes"},"next":{"title":"AuditRequest","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.core.domain.audit.auditrequest"}}');var a=s(74848),n=s(28453);const i={},o="AuditData<TStat>",d={},c=[{value:"Type Parameters",id:"type-parameters",level:4},{value:"Properties",id:"properties",level:2},{value:"<a></a><strong>AuditRequest</strong>",id:"auditrequest",level:3},{value:"Property Value",id:"property-value",level:4},{value:"<a></a><strong>AuditResponse</strong>",id:"auditresponse",level:3},{value:"Property Value",id:"property-value-1",level:4},{value:"<a></a><strong>Stat</strong>",id:"stat",level:3},{value:"Property Value",id:"property-value-2",level:4},{value:"Constructors",id:"constructors",level:2},{value:"<a></a><strong>AuditData()</strong>",id:"auditdata",level:3},{value:"Methods",id:"methods",level:2},{value:"<a></a><strong>Dispose()</strong>",id:"dispose",level:3},{value:"<a></a><strong>GetAproximateSize(Int32)</strong>",id:"getaproximatesizeint32",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<a></a><strong>GetAproximateSizeBase64(Int32)</strong>",id:"getaproximatesizebase64int32",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"auditdatatstat",children:"AuditData<TStat>"})}),"\n",(0,a.jsx)(t.p,{children:"Namespace: Connectors.Core.Domain.Audit"}),"\n",(0,a.jsx)(t.p,{children:"Represents audit data that includes request, response, and statistics information for a transaction."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"public class AuditData<TStat> : System.IDisposable\n"})}),"\n",(0,a.jsx)(t.h4,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"TStat"}),(0,a.jsx)("br",{}),"\nThe type of the statistic associated with the audit data."]}),"\n",(0,a.jsxs)(t.p,{children:["Inheritance ",(0,a.jsx)(t.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"})," \u2192 ",(0,a.jsx)(t.a,{href:"./connectors.core.domain.audit.auditdata-1",children:"AuditData<TStat>"}),(0,a.jsx)("br",{}),"\nImplements ",(0,a.jsx)(t.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.idisposable",children:"IDisposable"})]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Remarks:"})}),"\n",(0,a.jsx)(t.p,{children:"This class is designed to capture and manage detailed information about transactions, including the request sent,\nthe response received, and any related statistical data. It also provides utilities for estimating the size\nof the audit data and managing its lifecycle."}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsxs)(t.h3,{id:"auditrequest",children:[(0,a.jsx)("a",{id:"properties-auditrequest"}),(0,a.jsx)(t.strong,{children:"AuditRequest"})]}),"\n",(0,a.jsx)(t.p,{children:"The request details of the audited transaction."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"public AuditRequest AuditRequest { get; set; }\n"})}),"\n",(0,a.jsx)(t.h4,{id:"property-value",children:"Property Value"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"./connectors.core.domain.audit.auditrequest",children:"AuditRequest"}),(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Remarks:"})}),"\n",(0,a.jsxs)(t.p,{children:["Contains information such as headers, body content, and the endpoint path.\nSee ",(0,a.jsx)(t.a,{href:"./connectors.core.domain.audit.auditdata-1#auditrequest",children:"AuditData<TStat>.AuditRequest"})," for more details."]}),"\n",(0,a.jsxs)(t.h3,{id:"auditresponse",children:[(0,a.jsx)("a",{id:"properties-auditresponse"}),(0,a.jsx)(t.strong,{children:"AuditResponse"})]}),"\n",(0,a.jsx)(t.p,{children:"The response details of the audited transaction."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"public AuditResponse AuditResponse { get; set; }\n"})}),"\n",(0,a.jsx)(t.h4,{id:"property-value-1",children:"Property Value"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"./connectors.core.domain.audit.auditresponse",children:"AuditResponse"}),(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Remarks:"})}),"\n",(0,a.jsxs)(t.p,{children:["Includes the HTTP status code, headers, body content, and any associated exceptions.\nSee ",(0,a.jsx)(t.a,{href:"./connectors.core.domain.audit.auditdata-1#auditresponse",children:"AuditData<TStat>.AuditResponse"})," for more details."]}),"\n",(0,a.jsxs)(t.h3,{id:"stat",children:[(0,a.jsx)("a",{id:"properties-stat"}),(0,a.jsx)(t.strong,{children:"Stat"})]}),"\n",(0,a.jsx)(t.p,{children:"The statistics or metadata associated with the audit data."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"public TStat Stat { get; set; }\n"})}),"\n",(0,a.jsx)(t.h4,{id:"property-value-2",children:"Property Value"}),"\n",(0,a.jsxs)(t.p,{children:["TStat",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Remarks:"})}),"\n",(0,a.jsx)(t.p,{children:"The type of statistics is determined by the generic parameter .\nThis can include performance metrics, processing times, or other custom data."}),"\n",(0,a.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,a.jsxs)(t.h3,{id:"auditdata",children:[(0,a.jsx)("a",{id:"constructors-.ctor"}),(0,a.jsx)(t.strong,{children:"AuditData()"})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"public AuditData()\n"})}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsxs)(t.h3,{id:"dispose",children:[(0,a.jsx)("a",{id:"methods-dispose"}),(0,a.jsx)(t.strong,{children:"Dispose()"})]}),"\n",(0,a.jsx)(t.p,{children:"Disposes of the resources used by the audit data."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"public void Dispose()\n"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Remarks:"})}),"\n",(0,a.jsx)(t.p,{children:"This method releases the memory streams associated with the request and response bodies.\nIt should be called when the audit data is no longer needed."}),"\n",(0,a.jsxs)(t.h3,{id:"getaproximatesizeint32",children:[(0,a.jsx)("a",{id:"methods-getaproximatesize"}),(0,a.jsx)(t.strong,{children:"GetAproximateSize(Int32)"})]}),"\n",(0,a.jsx)(t.p,{children:"Calculates the approximate size of the audit data without assuming base64 encoding."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"public long GetAproximateSize(int marginSize)\n"})}),"\n",(0,a.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"marginSize"})," ",(0,a.jsx)(t.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32",children:"Int32"}),(0,a.jsx)("br",{}),"\nThe margin size to add to the calculated size, in bytes."]}),"\n",(0,a.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,a.jsx)(t.p,{children:"The approximate size of the audit data, in bytes."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Remarks:"})}),"\n",(0,a.jsx)(t.p,{children:"This method is useful for calculating the raw size of the request and response bodies without encoding."}),"\n",(0,a.jsxs)(t.h3,{id:"getaproximatesizebase64int32",children:[(0,a.jsx)("a",{id:"methods-getaproximatesizebase64"}),(0,a.jsx)(t.strong,{children:"GetAproximateSizeBase64(Int32)"})]}),"\n",(0,a.jsx)(t.p,{children:"Calculates the approximate size of the audit data in base64 format."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"public long GetAproximateSizeBase64(int marginSize)\n"})}),"\n",(0,a.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"marginSize"})," ",(0,a.jsx)(t.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32",children:"Int32"}),(0,a.jsx)("br",{}),"\nThe margin size to add to the calculated size, in bytes."]}),"\n",(0,a.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,a.jsx)(t.p,{children:"The approximate size of the audit data in base64 format, in bytes."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Remarks:"})}),"\n",(0,a.jsx)(t.p,{children:"This method assumes that the request and response bodies are stored in base64 format,\nwhich increases their size by approximately 33% (4/3 ratio)."})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},21020:(e,t,s)=>{var r=s(96540),a=Symbol.for("react.element"),n=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,s){var r,n={},c=null,l=null;for(r in void 0!==s&&(c=""+s),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(l=t.ref),t)i.call(t,r)&&!d.hasOwnProperty(r)&&(n[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===n[r]&&(n[r]=t[r]);return{$$typeof:a,type:e,key:c,ref:l,props:n,_owner:o.current}}t.Fragment=n,t.jsx=c,t.jsxs=c},74848:(e,t,s)=>{e.exports=s(21020)},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>o});var r=s(96540);const a={},n=r.createContext(a);function i(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);