"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["3412"],{60835:function(e,n,s){s.r(n),s.d(n,{Details:()=>m,toc:()=>h,default:()=>j,Badge:()=>g,Bullet:()=>r,assets:()=>i,frontMatter:()=>c,SpecifiedBy:()=>b,metadata:()=>a,contentTitle:()=>l});var a=JSON.parse('{"id":"types/objects/member-connection","title":"MemberConnection","description":"No description","source":"@site/api/types/objects/member-connection.mdx","sourceDirName":"types/objects","slug":"/types/objects/member-connection","permalink":"/api/types/objects/member-connection","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"member-connection","title":"MemberConnection"},"sidebar":"schemaSidebar","previous":{"title":"Media","permalink":"/api/types/objects/media"},"next":{"title":"MemberData","permalink":"/api/types/objects/member-data"}}'),t=s(85893),d=s(50065),o=s(67294);let c={id:"member-connection",title:"MemberConnection"},l=void 0,i={},r=()=>(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25CF\xa0"})}),b=e=>(0,t.jsxs)(t.Fragment,{children:["Specification",(0,t.jsx)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]}),g=e=>(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("span",{className:e.class,children:e.text})}),m=({dataOpen:e,dataClose:n,children:s,startOpen:a=!1})=>{let[d,c]=(0,o.useState)(a);return(0,t.jsxs)("details",{...d?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,t.jsx)("summary",{onClick:e=>{e.preventDefault(),c(e=>!e)},style:{listStyle:"none"},children:d?e:n}),d&&s]})},h=[{value:"Fields",id:"fields",level:3},{value:'<code>MemberConnection.<b>edges</b></code><Bullet></Bullet><code><b>[MemberEdge]</b></code> <Badge class="badge badge--secondary "></Badge> <Badge class="badge badge--secondary "></Badge>',id:"memberconnectionedgesmemberedge--",level:4},{value:'<code>MemberConnection.<b>pageInfo</b></code><Bullet></Bullet><code><b>PageInfo!</b></code> <Badge class="badge badge--secondary badge--non_null"></Badge> <Badge class="badge badge--secondary "></Badge>',id:"memberconnectionpageinfopageinfo--",level:4},{value:'<code>MemberConnection.<b>adviseMessage</b></code><Bullet></Bullet><code><b>[AdviseMessage!]</b></code> <Badge class="badge badge--secondary "></Badge> <Badge class="badge badge--secondary "></Badge>',id:"memberconnectionadvisemessageadvisemessage--",level:4},{value:'<code>MemberConnection.adviseMessage.<b>level</b></code><Bullet></Bullet><code><b>[AdviseMessageLevel]</b></code> <Badge class="badge badge--secondary "></Badge> <Badge class="badge badge--secondary "></Badge>',id:"memberconnectionadvisemessageleveladvisemessagelevel--",level:5},{value:'<code>MemberConnection.<b>totalCount</b></code><Bullet></Bullet><code><b>Int!</b></code> <Badge class="badge badge--secondary badge--non_null"></Badge> <Badge class="badge badge--secondary "></Badge>',id:"memberconnectiontotalcountint--",level:4},{value:"Member Of",id:"member-of",level:3}];function x(e){let n={a:"a",code:"code",h3:"h3",h4:"h4",h5:"h5",p:"p",pre:"pre",...(0,d.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"No description"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"type MemberConnection {\n  edges: [MemberEdge]\n  pageInfo: PageInfo!\n  adviseMessage(\n    level: [AdviseMessageLevel]\n  ): [AdviseMessage!]\n  totalCount: Int!\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"fields",children:"Fields"}),"\n",(0,t.jsxs)(n.h4,{id:"memberconnectionedgesmemberedge--",children:[(0,t.jsx)(n.a,{href:"#",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["MemberConnection.",(0,t.jsx)("b",{children:"edges"})]})}),(0,t.jsx)(r,{}),(0,t.jsx)(n.a,{href:"/api/types/objects/member-edge",children:(0,t.jsx)("code",{style:{fontWeight:"normal"},children:(0,t.jsx)("b",{children:"[MemberEdge]"})})})," ",(0,t.jsx)(g,{class:"badge badge--secondary ",text:"list"})," ",(0,t.jsx)(g,{class:"badge badge--secondary ",text:"object"})]}),"\n",(0,t.jsxs)(n.h4,{id:"memberconnectionpageinfopageinfo--",children:[(0,t.jsx)(n.a,{href:"#",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["MemberConnection.",(0,t.jsx)("b",{children:"pageInfo"})]})}),(0,t.jsx)(r,{}),(0,t.jsx)(n.a,{href:"/api/types/objects/page-info",children:(0,t.jsx)("code",{style:{fontWeight:"normal"},children:(0,t.jsx)("b",{children:"PageInfo!"})})})," ",(0,t.jsx)(g,{class:"badge badge--secondary badge--non_null",text:"non-null"})," ",(0,t.jsx)(g,{class:"badge badge--secondary ",text:"object"})]}),"\n",(0,t.jsxs)(n.h4,{id:"memberconnectionadvisemessageadvisemessage--",children:[(0,t.jsx)(n.a,{href:"#",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["MemberConnection.",(0,t.jsx)("b",{children:"adviseMessage"})]})}),(0,t.jsx)(r,{}),(0,t.jsx)(n.a,{href:"/api/types/objects/advise-message",children:(0,t.jsx)("code",{style:{fontWeight:"normal"},children:(0,t.jsx)("b",{children:"[AdviseMessage!]"})})})," ",(0,t.jsx)(g,{class:"badge badge--secondary ",text:"list"})," ",(0,t.jsx)(g,{class:"badge badge--secondary ",text:"object"})]}),"\n",(0,t.jsx)(n.p,{children:"List of advise messages."}),"\n",(0,t.jsxs)(n.h5,{id:"memberconnectionadvisemessageleveladvisemessagelevel--",children:[(0,t.jsx)(n.a,{href:"#",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["MemberConnection.adviseMessage.",(0,t.jsx)("b",{children:"level"})]})}),(0,t.jsx)(r,{}),(0,t.jsx)(n.a,{href:"/api/types/enums/advise-message-level",children:(0,t.jsx)("code",{style:{fontWeight:"normal"},children:(0,t.jsx)("b",{children:"[AdviseMessageLevel]"})})})," ",(0,t.jsx)(g,{class:"badge badge--secondary ",text:"list"})," ",(0,t.jsx)(g,{class:"badge badge--secondary ",text:"enum"})]}),"\n",(0,t.jsxs)(n.h4,{id:"memberconnectiontotalcountint--",children:[(0,t.jsx)(n.a,{href:"#",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["MemberConnection.",(0,t.jsx)("b",{children:"totalCount"})]})}),(0,t.jsx)(r,{}),(0,t.jsx)(n.a,{href:"/api/types/scalars/int",children:(0,t.jsx)("code",{style:{fontWeight:"normal"},children:(0,t.jsx)("b",{children:"Int!"})})})," ",(0,t.jsx)(g,{class:"badge badge--secondary badge--non_null",text:"non-null"})," ",(0,t.jsx)(g,{class:"badge badge--secondary ",text:"scalar"})]}),"\n",(0,t.jsx)(n.p,{children:"Identifies the total count of items in the connection."}),"\n",(0,t.jsx)(n.h3,{id:"member-of",children:"Member Of"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/api/types/interfaces/group-common-data",children:(0,t.jsx)(n.code,{children:"GroupCommonData"})}),"  ",(0,t.jsx)(g,{class:"badge badge--secondary badge--relation",text:"interface"}),(0,t.jsx)(r,{}),(0,t.jsx)(n.a,{href:"/api/types/objects/group-data",children:(0,t.jsx)(n.code,{children:"GroupData"})}),"  ",(0,t.jsx)(g,{class:"badge badge--secondary badge--relation",text:"object"}),(0,t.jsx)(r,{}),(0,t.jsx)(n.a,{href:"/api/types/objects/organization-data",children:(0,t.jsx)(n.code,{children:"OrganizationData"})}),"  ",(0,t.jsx)(g,{class:"badge badge--secondary badge--relation",text:"object"})]})]})}function j(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},50065:function(e,n,s){s.d(n,{Z:()=>c,a:()=>o});var a=s(67294);let t={},d=a.createContext(t);function o(e){let n=a.useContext(d);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(d.Provider,{value:n},e.children)}}}]);