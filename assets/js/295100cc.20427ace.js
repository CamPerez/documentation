"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["88477"],{28048:function(e,n,t){t.r(n),t.d(n,{Details:()=>p,toc:()=>x,default:()=>g,Badge:()=>h,Bullet:()=>c,assets:()=>l,frontMatter:()=>i,SpecifiedBy:()=>b,metadata:()=>s,contentTitle:()=>o});var s=JSON.parse('{"id":"types/objects/bed","title":"Bed","description":"Contains information about a bed.","source":"@site/api/types/objects/bed.mdx","sourceDirName":"types/objects","slug":"/types/objects/bed","permalink":"/api/types/objects/bed","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"bed","title":"Bed"},"sidebar":"schemaSidebar","previous":{"title":"BedStatic","permalink":"/api/types/objects/bed-static"},"next":{"title":"BoardConnection","permalink":"/api/types/objects/board-connection"}}'),d=t(85893),a=t(50065),r=t(67294);let i={id:"bed",title:"Bed"},o=void 0,l={},c=()=>(0,d.jsx)(d.Fragment,{children:(0,d.jsx)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25CF\xa0"})}),b=e=>(0,d.jsxs)(d.Fragment,{children:["Specification",(0,d.jsx)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]}),h=e=>(0,d.jsx)(d.Fragment,{children:(0,d.jsx)("span",{className:e.class,children:e.text})}),p=({dataOpen:e,dataClose:n,children:t,startOpen:s=!1})=>{let[a,i]=(0,r.useState)(s);return(0,d.jsxs)("details",{...a?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,d.jsx)("summary",{onClick:e=>{e.preventDefault(),i(e=>!e)},style:{listStyle:"none"},children:a?e:n}),a&&t]})},x=[{value:"Fields",id:"fields",level:3},{value:'<code>Bed.<b>type</b></code><Bullet></Bullet><code><b>String</b></code> <Badge class="badge badge--secondary "></Badge>',id:"bedtypestring-",level:4},{value:'<code>Bed.<b>description</b></code><Bullet></Bullet><code><b>String</b></code> <Badge class="badge badge--secondary "></Badge>',id:"beddescriptionstring-",level:4},{value:'<code>Bed.<b>count</b></code><Bullet></Bullet><code><b>Int</b></code> <Badge class="badge badge--secondary "></Badge>',id:"bedcountint-",level:4},{value:'<code>Bed.<b>shared</b></code><Bullet></Bullet><code><b>Boolean</b></code> <Badge class="badge badge--secondary "></Badge>',id:"bedsharedboolean-",level:4},{value:"Member Of",id:"member-of",level:3}];function j(e){let n={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.p,{children:"Contains information about a bed."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-graphql",children:"type Bed {\n  type: String\n  description: String\n  count: Int\n  shared: Boolean\n}\n"})}),"\n",(0,d.jsx)(n.h3,{id:"fields",children:"Fields"}),"\n",(0,d.jsxs)(n.h4,{id:"bedtypestring-",children:[(0,d.jsx)(n.a,{href:"#",children:(0,d.jsxs)("code",{style:{fontWeight:"normal"},children:["Bed.",(0,d.jsx)("b",{children:"type"})]})}),(0,d.jsx)(c,{}),(0,d.jsx)(n.a,{href:"/api/types/scalars/string",children:(0,d.jsx)("code",{style:{fontWeight:"normal"},children:(0,d.jsx)("b",{children:"String"})})})," ",(0,d.jsx)(h,{class:"badge badge--secondary ",text:"scalar"})]}),"\n",(0,d.jsx)(n.p,{children:"Specifies the bed type"}),"\n",(0,d.jsxs)(n.h4,{id:"beddescriptionstring-",children:[(0,d.jsx)(n.a,{href:"#",children:(0,d.jsxs)("code",{style:{fontWeight:"normal"},children:["Bed.",(0,d.jsx)("b",{children:"description"})]})}),(0,d.jsx)(c,{}),(0,d.jsx)(n.a,{href:"/api/types/scalars/string",children:(0,d.jsx)("code",{style:{fontWeight:"normal"},children:(0,d.jsx)("b",{children:"String"})})})," ",(0,d.jsx)(h,{class:"badge badge--secondary ",text:"scalar"})]}),"\n",(0,d.jsx)(n.p,{children:"Description about the bed"}),"\n",(0,d.jsxs)(n.h4,{id:"bedcountint-",children:[(0,d.jsx)(n.a,{href:"#",children:(0,d.jsxs)("code",{style:{fontWeight:"normal"},children:["Bed.",(0,d.jsx)("b",{children:"count"})]})}),(0,d.jsx)(c,{}),(0,d.jsx)(n.a,{href:"/api/types/scalars/int",children:(0,d.jsx)("code",{style:{fontWeight:"normal"},children:(0,d.jsx)("b",{children:"Int"})})})," ",(0,d.jsx)(h,{class:"badge badge--secondary ",text:"scalar"})]}),"\n",(0,d.jsx)(n.p,{children:"Indicates number of beds in a room"}),"\n",(0,d.jsxs)(n.h4,{id:"bedsharedboolean-",children:[(0,d.jsx)(n.a,{href:"#",children:(0,d.jsxs)("code",{style:{fontWeight:"normal"},children:["Bed.",(0,d.jsx)("b",{children:"shared"})]})}),(0,d.jsx)(c,{}),(0,d.jsx)(n.a,{href:"/api/types/scalars/boolean",children:(0,d.jsx)("code",{style:{fontWeight:"normal"},children:(0,d.jsx)("b",{children:"Boolean"})})})," ",(0,d.jsx)(h,{class:"badge badge--secondary ",text:"scalar"})]}),"\n",(0,d.jsx)(n.p,{children:"Specifies if the bed is shared or not"}),"\n",(0,d.jsx)(n.h3,{id:"member-of",children:"Member Of"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/api/types/objects/room",children:(0,d.jsx)(n.code,{children:"Room"})}),"  ",(0,d.jsx)(h,{class:"badge badge--secondary badge--relation",text:"object"}),(0,d.jsx)(c,{}),(0,d.jsx)(n.a,{href:"/api/types/objects/room-option-quote",children:(0,d.jsx)(n.code,{children:"RoomOptionQuote"})}),"  ",(0,d.jsx)(h,{class:"badge badge--secondary badge--relation",text:"object"})]})]})}function g(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(j,{...e})}):j(e)}},50065:function(e,n,t){t.d(n,{Z:()=>i,a:()=>r});var s=t(67294);let d={},a=s.createContext(d);function r(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);