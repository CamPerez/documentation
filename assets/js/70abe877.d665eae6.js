/*! For license information please see 70abe877.d665eae6.js.LICENSE.txt */
"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[16758],{32314:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.pull.hotel.domain.contracts.common.parameter","title":"Parameter","description":"Namespace: Connectors.Pull.Hotel.Domain.Contracts.Common","source":"@site/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.pull.hotel.domain.contracts.common.parameter.md","sourceDirName":"apis/for-sellers/connectors-pull-developers-api/API_Reference","slug":"/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.pull.hotel.domain.contracts.common.parameter","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.pull.hotel.domain.contracts.common.parameter","draft":false,"unlisted":false,"editUrl":"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.pull.hotel.domain.contracts.common.parameter.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"OptionCancelPolicy","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.pull.hotel.domain.contracts.common.optioncancelpolicy"},"next":{"title":"ParameterModel","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/API_Reference/connectors.pull.hotel.domain.contracts.common.parametermodel"}}');var s=t(74848),a=t(28453);const o={},l="Parameter",i={},c=[{value:"Fields",id:"fields",level:2},{value:"<strong>MaxKey</strong>",id:"maxkey",level:3},{value:"Properties",id:"properties",level:2},{value:"<strong>Key</strong>",id:"key",level:3},{value:"Property Value",id:"property-value",level:4},{value:"<strong>Value</strong>",id:"value",level:3},{value:"Property Value",id:"property-value-1",level:4},{value:"<strong>ParameterType</strong>",id:"parametertype",level:3},{value:"Property Value",id:"property-value-2",level:4},{value:"<strong>Immutable</strong>",id:"immutable",level:3},{value:"Property Value",id:"property-value-3",level:4},{value:"<strong>RoomId</strong>",id:"roomid",level:3},{value:"Property Value",id:"property-value-4",level:4},{value:"Constructors",id:"constructors",level:2},{value:"<strong>Parameter(Int32, String, ParameterType, Boolean, UInt32)</strong>",id:"parameterint32-string-parametertype-boolean-uint32",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Methods",id:"methods",level:2},{value:"<strong>BuildParameter&lt;TKey&gt;(TKey, String, ParameterType, Boolean, UInt32)</strong>",id:"buildparametertkeytkey-string-parametertype-boolean-uint32",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"<strong>CloneParameter&lt;TKey&gt;(TKey, Parameter, UInt32)</strong>",id:"cloneparametertkeytkey-parameter-uint32",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"parameter",children:"Parameter"})}),"\n",(0,s.jsx)(r.p,{children:"Namespace: Connectors.Pull.Hotel.Domain.Contracts.Common"}),"\n",(0,s.jsxs)(r.p,{children:["Represents a parameter with various properties and methods for building and cloning.\nUsed for passing information between ",(0,s.jsx)(r.code,{children:"Search"}),", ",(0,s.jsx)(r.code,{children:"Quote"}),", and ",(0,s.jsx)(r.code,{children:"Book"})," operations."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public class Parameter\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Inheritance ",(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"})," \u2192 ",(0,s.jsx)(r.a,{href:"./connectors.pull.hotel.domain.contracts.common.parameter",children:"Parameter"}),(0,s.jsx)("br",{}),"\nAttributes ",(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.serializableattribute",children:"SerializableAttribute"}),", DataContractAttribute"]}),"\n",(0,s.jsx)(r.h2,{id:"fields",children:"Fields"}),"\n",(0,s.jsx)(r.h3,{id:"maxkey",children:(0,s.jsx)(r.strong,{children:"MaxKey"})}),"\n",(0,s.jsx)(r.p,{children:"The maximum allowed value for the Key property."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public static int MaxKey;\n"})}),"\n",(0,s.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(r.h3,{id:"key",children:(0,s.jsx)(r.strong,{children:"Key"})}),"\n",(0,s.jsx)(r.p,{children:"Identifies the parameter with a numeric key."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public int Key { get; set; }\n"})}),"\n",(0,s.jsx)(r.h4,{id:"property-value",children:"Property Value"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32",children:"Int32"}),(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(r.h3,{id:"value",children:(0,s.jsx)(r.strong,{children:"Value"})}),"\n",(0,s.jsx)(r.p,{children:"Defines the value associated with the parameter."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public string Value { get; set; }\n"})}),"\n",(0,s.jsx)(r.h4,{id:"property-value-1",children:"Property Value"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(r.h3,{id:"parametertype",children:(0,s.jsx)(r.strong,{children:"ParameterType"})}),"\n",(0,s.jsxs)(r.p,{children:["Specifies the type of the parameter (",(0,s.jsx)(r.a,{href:"./connectors.pull.hotel.domain.contracts.common.parameter#parametertype",children:"Parameter.ParameterType"}),"),\nwhether it is internal or supplier-related."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public ParameterType ParameterType { get; set; }\n"})}),"\n",(0,s.jsx)(r.h4,{id:"property-value-2",children:"Property Value"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"./connectors.pull.hotel.domain.contracts.common.parametertype",children:"ParameterType"}),(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(r.h3,{id:"immutable",children:(0,s.jsx)(r.strong,{children:"Immutable"})}),"\n",(0,s.jsxs)(r.p,{children:["Indicates whether the parameter remains constant throughout operations\n(e.g., from ",(0,s.jsx)(r.code,{children:"Search"})," to ",(0,s.jsx)(r.code,{children:"Quote"})," and ",(0,s.jsx)(r.code,{children:"Book"}),"). In second searches or quotes, an immutable parameter is used to identify and match the same option."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public bool Immutable { get; set; }\n"})}),"\n",(0,s.jsx)(r.h4,{id:"property-value-3",children:"Property Value"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Remarks:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["When set to ",(0,s.jsx)(r.code,{children:"true"}),", the parameter is fixed and serves as a key for comparison to ensure the same option is selected."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["When set to ",(0,s.jsx)(r.code,{children:"false"}),", the parameter value can be updated or modified, and it is not considered in the matching process."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"roomid",children:(0,s.jsx)(r.strong,{children:"RoomId"})}),"\n",(0,s.jsx)(r.p,{children:"Associates the parameter with a specific room, identified by its ID."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public uint RoomId { get; set; }\n"})}),"\n",(0,s.jsx)(r.h4,{id:"property-value-4",children:"Property Value"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.uint32",children:"UInt32"}),(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(r.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(r.h3,{id:"parameterint32-string-parametertype-boolean-uint32",children:(0,s.jsx)(r.strong,{children:"Parameter(Int32, String, ParameterType, Boolean, UInt32)"})}),"\n",(0,s.jsx)(r.p,{children:"Initializes a new instance of the Parameter class with specified values."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public Parameter(int key, string value, ParameterType parameterType, bool immutable, uint roomId)\n"})}),"\n",(0,s.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"key"})," ",(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32",children:"Int32"}),(0,s.jsx)("br",{}),"\nThe key of the parameter."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"value"})," ",(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,s.jsx)("br",{}),"\nThe value of the parameter."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"parameterType"})," ",(0,s.jsx)(r.a,{href:"./connectors.pull.hotel.domain.contracts.common.parametertype",children:"ParameterType"}),(0,s.jsx)("br",{}),"\nThe type of the parameter (",(0,s.jsx)(r.a,{href:"./connectors.pull.hotel.domain.contracts.common.parameter#parametertype",children:"Parameter.ParameterType"}),")."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"immutable"})," ",(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,s.jsx)("br",{}),"\nIndicates whether the parameter can be modified in subsequent operations."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"roomId"})," ",(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.uint32",children:"UInt32"}),(0,s.jsx)("br",{}),"\nThe room ID associated with the parameter (optional)."]}),"\n",(0,s.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(r.h3,{id:"buildparametertkeytkey-string-parametertype-boolean-uint32",children:(0,s.jsx)(r.strong,{children:"BuildParameter<TKey>(TKey, String, ParameterType, Boolean, UInt32)"})}),"\n",(0,s.jsx)(r.p,{children:"Builds a new Parameter instance with the specified values."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public static Parameter BuildParameter<TKey>(TKey key, string value, ParameterType parameterType, bool immutable, uint roomId)\n"})}),"\n",(0,s.jsx)(r.h4,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"TKey"}),(0,s.jsx)("br",{}),"\nThe type of the key, which must be an Enum."]}),"\n",(0,s.jsx)(r.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"key"})," TKey",(0,s.jsx)("br",{}),"\nThe key of the parameter."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"value"})," ",(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,s.jsx)("br",{}),"\nThe value of the parameter."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"parameterType"})," ",(0,s.jsx)(r.a,{href:"./connectors.pull.hotel.domain.contracts.common.parametertype",children:"ParameterType"}),(0,s.jsx)("br",{}),"\nThe type of the parameter."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"immutable"})," ",(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,s.jsx)("br",{}),"\nIndicates whether the parameter is immutable (default is true)."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"roomId"})," ",(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.uint32",children:"UInt32"}),(0,s.jsx)("br",{}),"\nThe room ID associated with the parameter (optional)."]}),"\n",(0,s.jsx)(r.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"./connectors.pull.hotel.domain.contracts.common.parameter",children:"Parameter"}),(0,s.jsx)("br",{}),"\nA new Parameter instance."]}),"\n",(0,s.jsx)(r.h3,{id:"cloneparametertkeytkey-parameter-uint32",children:(0,s.jsx)(r.strong,{children:"CloneParameter<TKey>(TKey, Parameter, UInt32)"})}),"\n",(0,s.jsx)(r.p,{children:"Clones an existing Parameter instance with a new key and optionally a new room ID."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public static Parameter CloneParameter<TKey>(TKey key, Parameter parameter, uint roomId)\n"})}),"\n",(0,s.jsx)(r.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"TKey"}),(0,s.jsx)("br",{}),"\nThe type of the key, which must be an Enum."]}),"\n",(0,s.jsx)(r.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"key"})," TKey",(0,s.jsx)("br",{}),"\nThe new key for the cloned parameter."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"parameter"})," ",(0,s.jsx)(r.a,{href:"./connectors.pull.hotel.domain.contracts.common.parameter",children:"Parameter"}),(0,s.jsx)("br",{}),"\nThe original Parameter instance to clone."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"roomId"})," ",(0,s.jsx)(r.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.uint32",children:"UInt32"}),(0,s.jsx)("br",{}),"\nThe new room ID for the cloned parameter (optional)."]}),"\n",(0,s.jsx)(r.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"./connectors.pull.hotel.domain.contracts.common.parameter",children:"Parameter"}),(0,s.jsx)("br",{}),"\nA new Parameter instance with the specified changes."]})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},21020:(e,r,t)=>{var n=t(96540),s=Symbol.for("react.element"),a=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,l=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i={key:!0,ref:!0,__self:!0,__source:!0};function c(e,r,t){var n,a={},c=null,d=null;for(n in void 0!==t&&(c=""+t),void 0!==r.key&&(c=""+r.key),void 0!==r.ref&&(d=r.ref),r)o.call(r,n)&&!i.hasOwnProperty(n)&&(a[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===a[n]&&(a[n]=r[n]);return{$$typeof:s,type:e,key:c,ref:d,props:a,_owner:l.current}}r.Fragment=a,r.jsx=c,r.jsxs=c},74848:(e,r,t)=>{e.exports=t(21020)},28453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>l});var n=t(96540);const s={},a=n.createContext(s);function o(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);