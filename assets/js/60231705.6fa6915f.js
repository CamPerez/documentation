"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["46387"],{24372:function(e,t,s){s.r(t),s.d(t,{frontMatter:()=>l,toc:()=>a,default:()=>h,metadata:()=>r,assets:()=>d,contentTitle:()=>o});var r=JSON.parse('{"id":"apis/for-sellers/connectors-pull-developers-api/api-reference/serviceoperationenum","title":"ServiceOperationEnum","description":"Defines the available service operations for hotel content operations.","source":"@site/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/serviceoperationenum.md","sourceDirName":"apis/for-sellers/connectors-pull-developers-api/api-reference","slug":"/apis/for-sellers/connectors-pull-developers-api/api-reference/serviceoperationenum","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/serviceoperationenum","draft":false,"unlisted":false,"editUrl":"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/serviceoperationenum.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"SearchSettings","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/searchsettings"},"next":{"title":"Settings","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/settings"}}'),n=s(85893),i=s(50065);let l={},o="ServiceOperationEnum",d={},a=[{value:"Enum Values",id:"enum-values",level:2}];function c(e){let t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"serviceoperationenum",children:"ServiceOperationEnum"})}),"\n",(0,n.jsx)(t.p,{children:"Defines the available service operations for hotel content operations."}),"\n",(0,n.jsx)(t.h2,{id:"enum-values",children:"Enum Values"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Descrption"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"HotelListBasicInfo"})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Not yet implemented."})," Intended to return a minimal set of hotel data (e.g., name, location) and additional information to be retrieved separately with ",(0,n.jsx)(t.code,{children:"HotelDetails"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"HotelListFull"})}),(0,n.jsx)(t.td,{children:"Used when the supplier returns all the information in one call."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"HotelListDelta"})}),(0,n.jsxs)(t.td,{children:["Returns only the hotel codes. Additional hotel details must be retrieved separately with ",(0,n.jsx)(t.code,{children:"HotelDetails"})," making a request for each hotel code. This approach is typically used to minimize payload size and optimize performance."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"HotelDetails"})}),(0,n.jsx)(t.td,{children:"Standard HotelDetails operation that retrieves and updates all hotels individually from the database."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"HotelDetailsByDates"})}),(0,n.jsx)(t.td,{children:"Retrieves and updates hotels based on specified dates without relying on existing database entries."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"HotelDetailsMultiCodes"})}),(0,n.jsx)(t.td,{children:"Retrieves all hotel codes from the database but calls the integration in blocks of multiple hotels."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"HotelDetailsMultiLanguages"})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Not yet implemented."})," Retrieves all hotel codes from the database and calls the integration with multiple languages simultaneously."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"HotelDetailsMultiLanguagesMultiCodes"})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.strong,{children:"Not yet implemented."})," Retrieves all hotel codes from the database and calls the integration with multiple languages and multiple codes at once."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Destinations"})}),(0,n.jsx)(t.td,{children:"Retrieves destinations from the supplier."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Boards"})}),(0,n.jsx)(t.td,{children:"Retrieves board types from the supplier."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Categories"})}),(0,n.jsx)(t.td,{children:"Retrieves hotel categories from the supplier."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Rooms"})}),(0,n.jsx)(t.td,{children:"Retrieves rooms from the supplier."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Currencies"})}),(0,n.jsx)(t.td,{children:"Retrieves currencies from the supplier."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Markets"})}),(0,n.jsx)(t.td,{children:"Retrieves markets from the supplier."})]})]})]})]})}function h(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},50065:function(e,t,s){s.d(t,{Z:()=>o,a:()=>l});var r=s(67294);let n={},i=r.createContext(n);function l(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);