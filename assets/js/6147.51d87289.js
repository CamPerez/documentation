"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["6147"],{55902:function(r,o,e){e.d(o,{lWp:()=>oi,phM:()=>K,cvW:()=>m,C3g:()=>rW,$d5:()=>oF,OLZ:()=>rF,fSI:()=>ra,GYc:()=>r0,VVv:()=>G,zRJ:()=>p,tZ6:()=>oW,kB1:()=>r8,b7$:()=>rY,NOs:()=>B,BOY:()=>rB,hEj:()=>T,SUp:()=>oo,zKA:()=>Z,XVp:()=>oP,c63:()=>y,gkn:()=>M,jbW:()=>oZ,a9O:()=>rK,lXJ:()=>N,kVY:()=>rI,Gvr:()=>rw,P6Y:()=>ro,Fgs:()=>rz,Gj_:()=>rL,Tnx:()=>ok,kvU:()=>ob,OIo:()=>R,D0T:()=>F,kJk:()=>oG,ytC:()=>oC,P4M:()=>rr,zJb:()=>rA,cbQ:()=>oj,s$:()=>op,HCL:()=>j,_lC:()=>rZ,M6C:()=>os,PpC:()=>$,YI3:()=>rq,Oop:()=>oh,CzK:()=>X,BQ0:()=>oe,Hz8:()=>oO,dCr:()=>og,GO4:()=>rU,Saq:()=>oI,XZx:()=>d,lRK:()=>a,PRb:()=>rT,IYc:()=>rP,url:()=>u,nd:()=>ot,UnT:()=>oS,F3d:()=>om,b6y:()=>w,MUv:()=>q,_bK:()=>ol,kwl:()=>t.kw,_g0:()=>rj,XEs:()=>rE,ov3:()=>rN,P6G:()=>t.P6,XV0:()=>rQ,EPQ:()=>rR,ixd:()=>rd,NPS:()=>oz,qBU:()=>r6,Itd:()=>ry,oQ$:()=>on,yJx:()=>W,Hfx:()=>v,SPM:()=>rp,JpG:()=>rm,rKv:()=>r3,dRz:()=>c,Cdg:()=>ox,ABB:()=>C,_2n:()=>oa,dt_:()=>rH,AWI:()=>oc,Dut:()=>A,K_d:()=>r7,_wn:()=>k,uxu:()=>oH,R8t:()=>r9,ESD:()=>r2,Rzx:()=>O,WV7:()=>or,yb5:()=>x,pW3:()=>I,paE:()=>r_,sEe:()=>rS,qeD:()=>s,keg:()=>Y,PX0:()=>ow,SUY:()=>rv,zKr:()=>oM,loF:()=>o_,_t9:()=>rG,T83:()=>S,DEr:()=>oE,y65:()=>oy,Fm_:()=>rb,A42:()=>rn,R80:()=>l,j5u:()=>rJ,F9q:()=>re,_Yy:()=>H,EiJ:()=>V,hX8:()=>Q,$DX:()=>oq,xEn:()=>r5,vGG:()=>oD,bKB:()=>z,Pvw:()=>rO,Gwp:()=>oN,OZR:()=>r$,xL1:()=>h,mV1:()=>oB,ZnX:()=>t.Zn,QO2:()=>t.QO,v$Q:()=>r1,Vqd:()=>oK,IPX:()=>t.IP,Ivo:()=>rD,SUG:()=>rM,l80:()=>rc,Bqu:()=>ou,E3h:()=>oR,EQn:()=>oT,rh:()=>rt,D1_:()=>P,opG:()=>o$,H6q:()=>rl,ES4:()=>E,etL:()=>f,iFQ:()=>rX,CNo:()=>_,K19:()=>od,RV_:()=>rV,KjV:()=>oA,g8u:()=>g,p2g:()=>r4,uoC:()=>L,oSI:()=>oL,ZGJ:()=>oV,BtC:()=>t.Bt,ynu:()=>b,rg2:()=>of,pdn:()=>ov,ypS:()=>U,gpD:()=>D,n_1:()=>t.n_});var t=e(27646),n=e(63580),i=e(41264);let c=(0,t.P6)("foreground",{dark:"#CCCCCC",light:"#616161",hcDark:"#FFFFFF",hcLight:"#292929"},n.NC("foreground","Overall foreground color. This color is only used if not overridden by a component."));(0,t.P6)("disabledForeground",{dark:"#CCCCCC80",light:"#61616180",hcDark:"#A5A5A5",hcLight:"#7F7F7F"},n.NC("disabledForeground","Overall foreground for disabled elements. This color is only used if not overridden by a component.")),(0,t.P6)("errorForeground",{dark:"#F48771",light:"#A1260D",hcDark:"#F48771",hcLight:"#B5200D"},n.NC("errorForeground","Overall foreground color for error messages. This color is only used if not overridden by a component.")),(0,t.P6)("descriptionForeground",{light:"#717171",dark:(0,t.Zn)(c,.7),hcDark:(0,t.Zn)(c,.7),hcLight:(0,t.Zn)(c,.7)},n.NC("descriptionForeground","Foreground color for description text providing additional information, for example for a label."));let d=(0,t.P6)("icon.foreground",{dark:"#C5C5C5",light:"#424242",hcDark:"#FFFFFF",hcLight:"#292929"},n.NC("iconForeground","The default color for icons in the workbench.")),l=(0,t.P6)("focusBorder",{dark:"#007FD4",light:"#0090F1",hcDark:"#F38518",hcLight:"#006BBD"},n.NC("focusBorder","Overall border color for focused elements. This color is only used if not overridden by a component.")),a=(0,t.P6)("contrastBorder",{light:null,dark:null,hcDark:"#6FC3DF",hcLight:"#0F4A85"},n.NC("contrastBorder","An extra border around elements to separate them from others for greater contrast.")),h=(0,t.P6)("contrastActiveBorder",{light:null,dark:null,hcDark:l,hcLight:l},n.NC("activeContrastBorder","An extra border around active elements to separate them from others for greater contrast."));(0,t.P6)("selection.background",null,n.NC("selectionBackground","The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor."));let u=(0,t.P6)("textLink.foreground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},n.NC("textLinkForeground","Foreground color for links in text."));(0,t.P6)("textLink.activeForeground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},n.NC("textLinkActiveForeground","Foreground color for links in text when clicked on and on mouse hover.")),(0,t.P6)("textSeparator.foreground",{light:"#0000002e",dark:"#ffffff2e",hcDark:i.Il.black,hcLight:"#292929"},n.NC("textSeparatorForeground","Color for text separators.")),(0,t.P6)("textPreformat.foreground",{light:"#A31515",dark:"#D7BA7D",hcDark:"#000000",hcLight:"#FFFFFF"},n.NC("textPreformatForeground","Foreground color for preformatted text segments.")),(0,t.P6)("textPreformat.background",{light:"#0000001A",dark:"#FFFFFF1A",hcDark:"#FFFFFF",hcLight:"#09345f"},n.NC("textPreformatBackground","Background color for preformatted text segments.")),(0,t.P6)("textBlockQuote.background",{light:"#f2f2f2",dark:"#222222",hcDark:null,hcLight:"#F2F2F2"},n.NC("textBlockQuoteBackground","Background color for block quotes in text.")),(0,t.P6)("textBlockQuote.border",{light:"#007acc80",dark:"#007acc80",hcDark:i.Il.white,hcLight:"#292929"},n.NC("textBlockQuoteBorder","Border color for block quotes in text.")),(0,t.P6)("textCodeBlock.background",{light:"#dcdcdc66",dark:"#0a0a0a66",hcDark:i.Il.black,hcLight:"#F2F2F2"},n.NC("textCodeBlockBackground","Background color for code blocks in text.")),(0,t.P6)("sash.hoverBorder",l,n.NC("sashActiveBorder","Border color of active sashes."));let g=(0,t.P6)("badge.background",{dark:"#4D4D4D",light:"#C4C4C4",hcDark:i.Il.black,hcLight:"#0F4A85"},n.NC("badgeBackground","Badge background color. Badges are small information labels, e.g. for search results count.")),s=(0,t.P6)("badge.foreground",{dark:i.Il.white,light:"#333",hcDark:i.Il.white,hcLight:i.Il.white},n.NC("badgeForeground","Badge foreground color. Badges are small information labels, e.g. for search results count.")),k=(0,t.P6)("scrollbar.shadow",{dark:"#000000",light:"#DDDDDD",hcDark:null,hcLight:null},n.NC("scrollbarShadow","Scrollbar shadow to indicate that the view is scrolled.")),f=(0,t.P6)("scrollbarSlider.background",{dark:i.Il.fromHex("#797979").transparent(.4),light:i.Il.fromHex("#646464").transparent(.4),hcDark:(0,t.Zn)(a,.6),hcLight:(0,t.Zn)(a,.4)},n.NC("scrollbarSliderBackground","Scrollbar slider background color.")),C=(0,t.P6)("scrollbarSlider.hoverBackground",{dark:i.Il.fromHex("#646464").transparent(.7),light:i.Il.fromHex("#646464").transparent(.7),hcDark:(0,t.Zn)(a,.8),hcLight:(0,t.Zn)(a,.8)},n.NC("scrollbarSliderHoverBackground","Scrollbar slider background color when hovering.")),b=(0,t.P6)("scrollbarSlider.activeBackground",{dark:i.Il.fromHex("#BFBFBF").transparent(.4),light:i.Il.fromHex("#000000").transparent(.6),hcDark:a,hcLight:a},n.NC("scrollbarSliderActiveBackground","Scrollbar slider background color when clicked on.")),p=(0,t.P6)("progressBar.background",{dark:i.Il.fromHex("#0E70C0"),light:i.Il.fromHex("#0E70C0"),hcDark:a,hcLight:a},n.NC("progressBarBackground","Background color of the progress bar that can show for long running operations.")),m=(0,t.P6)("editor.background",{light:"#ffffff",dark:"#1E1E1E",hcDark:i.Il.black,hcLight:i.Il.white},n.NC("editorBackground","Editor background color.")),B=(0,t.P6)("editor.foreground",{light:"#333333",dark:"#BBBBBB",hcDark:i.Il.white,hcLight:c},n.NC("editorForeground","Editor default foreground color."));(0,t.P6)("editorStickyScroll.background",m,n.NC("editorStickyScrollBackground","Background color of sticky scroll in the editor")),(0,t.P6)("editorStickyScrollHover.background",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:null,hcLight:i.Il.fromHex("#0F4A85").transparent(.1)},n.NC("editorStickyScrollHoverBackground","Background color of sticky scroll on hover in the editor")),(0,t.P6)("editorStickyScroll.border",{dark:null,light:null,hcDark:a,hcLight:a},n.NC("editorStickyScrollBorder","Border color of sticky scroll in the editor")),(0,t.P6)("editorStickyScroll.shadow",k,n.NC("editorStickyScrollShadow"," Shadow color of sticky scroll in the editor"));let F=(0,t.P6)("editorWidget.background",{dark:"#252526",light:"#F3F3F3",hcDark:"#0C141F",hcLight:i.Il.white},n.NC("editorWidgetBackground","Background color of editor widgets, such as find/replace.")),v=(0,t.P6)("editorWidget.foreground",c,n.NC("editorWidgetForeground","Foreground color of editor widgets, such as find/replace.")),P=(0,t.P6)("editorWidget.border",{dark:"#454545",light:"#C8C8C8",hcDark:a,hcLight:a},n.NC("editorWidgetBorder","Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget."));(0,t.P6)("editorWidget.resizeBorder",null,n.NC("editorWidgetResizeBorder","Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.")),(0,t.P6)("editorError.background",null,n.NC("editorError.background","Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0);let N=(0,t.P6)("editorError.foreground",{dark:"#F14C4C",light:"#E51400",hcDark:"#F48771",hcLight:"#B5200D"},n.NC("editorError.foreground","Foreground color of error squigglies in the editor.")),w=(0,t.P6)("editorError.border",{dark:null,light:null,hcDark:i.Il.fromHex("#E47777").transparent(.8),hcLight:"#B5200D"},n.NC("errorBorder","If set, color of double underlines for errors in the editor.")),D=(0,t.P6)("editorWarning.background",null,n.NC("editorWarning.background","Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),L=(0,t.P6)("editorWarning.foreground",{dark:"#CCA700",light:"#BF8803",hcDark:"#FFD370",hcLight:"#895503"},n.NC("editorWarning.foreground","Foreground color of warning squigglies in the editor.")),I=(0,t.P6)("editorWarning.border",{dark:null,light:null,hcDark:i.Il.fromHex("#FFCC00").transparent(.8),hcLight:i.Il.fromHex("#FFCC00").transparent(.8)},n.NC("warningBorder","If set, color of double underlines for warnings in the editor."));(0,t.P6)("editorInfo.background",null,n.NC("editorInfo.background","Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0);let y=(0,t.P6)("editorInfo.foreground",{dark:"#3794FF",light:"#1a85ff",hcDark:"#3794FF",hcLight:"#1a85ff"},n.NC("editorInfo.foreground","Foreground color of info squigglies in the editor.")),S=(0,t.P6)("editorInfo.border",{dark:null,light:null,hcDark:i.Il.fromHex("#3794FF").transparent(.8),hcLight:"#292929"},n.NC("infoBorder","If set, color of double underlines for infos in the editor.")),A=(0,t.P6)("editorHint.foreground",{dark:i.Il.fromHex("#eeeeee").transparent(.7),light:"#6c6c6c",hcDark:null,hcLight:null},n.NC("editorHint.foreground","Foreground color of hint squigglies in the editor."));(0,t.P6)("editorHint.border",{dark:null,light:null,hcDark:i.Il.fromHex("#eeeeee").transparent(.8),hcLight:"#292929"},n.NC("hintBorder","If set, color of double underlines for hints in the editor."));let H=(0,t.P6)("editorLink.activeForeground",{dark:"#4E94CE",light:i.Il.blue,hcDark:i.Il.cyan,hcLight:"#292929"},n.NC("activeLinkForeground","Color of active links.")),T=(0,t.P6)("editor.selectionBackground",{light:"#ADD6FF",dark:"#264F78",hcDark:"#f3f518",hcLight:"#0F4A85"},n.NC("editorSelectionBackground","Color of the editor selection.")),x=(0,t.P6)("editor.selectionForeground",{light:null,dark:null,hcDark:"#000000",hcLight:i.Il.white},n.NC("editorSelectionForeground","Color of the selected text for high contrast.")),E=(0,t.P6)("editor.inactiveSelectionBackground",{light:(0,t.Zn)(T,.5),dark:(0,t.Zn)(T,.5),hcDark:(0,t.Zn)(T,.7),hcLight:(0,t.Zn)(T,.5)},n.NC("editorInactiveSelection","Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations."),!0),O=(0,t.P6)("editor.selectionHighlightBackground",{light:(0,t.JV)(T,m,.3,.6),dark:(0,t.JV)(T,m,.3,.6),hcDark:null,hcLight:null},n.NC("editorSelectionHighlight","Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations."),!0);(0,t.P6)("editor.selectionHighlightBorder",{light:null,dark:null,hcDark:h,hcLight:h},n.NC("editorSelectionHighlightBorder","Border color for regions with the same content as the selection.")),(0,t.P6)("editor.findMatchBackground",{light:"#A8AC94",dark:"#515C6A",hcDark:null,hcLight:null},n.NC("editorFindMatch","Color of the current search match."));let Z=(0,t.P6)("editor.findMatchForeground",null,n.NC("editorFindMatchForeground","Text color of the current search match.")),q=(0,t.P6)("editor.findMatchHighlightBackground",{light:"#EA5C0055",dark:"#EA5C0055",hcDark:null,hcLight:null},n.NC("findMatchHighlight","Color of the other search matches. The color must not be opaque so as not to hide underlying decorations."),!0),R=(0,t.P6)("editor.findMatchHighlightForeground",null,n.NC("findMatchHighlightForeground","Foreground color of the other search matches."),!0);(0,t.P6)("editor.findRangeHighlightBackground",{dark:"#3a3d4166",light:"#b4b4b44d",hcDark:null,hcLight:null},n.NC("findRangeHighlight","Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.P6)("editor.findMatchBorder",{light:null,dark:null,hcDark:h,hcLight:h},n.NC("editorFindMatchBorder","Border color of the current search match."));let V=(0,t.P6)("editor.findMatchHighlightBorder",{light:null,dark:null,hcDark:h,hcLight:h},n.NC("findMatchHighlightBorder","Border color of the other search matches.")),M=(0,t.P6)("editor.findRangeHighlightBorder",{dark:null,light:null,hcDark:(0,t.Zn)(h,.4),hcLight:(0,t.Zn)(h,.4)},n.NC("findRangeHighlightBorder","Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0);(0,t.P6)("editor.hoverHighlightBackground",{light:"#ADD6FF26",dark:"#264f7840",hcDark:"#ADD6FF26",hcLight:null},n.NC("hoverHighlight","Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations."),!0);let W=(0,t.P6)("editorHoverWidget.background",F,n.NC("hoverBackground","Background color of the editor hover."));(0,t.P6)("editorHoverWidget.foreground",v,n.NC("hoverForeground","Foreground color of the editor hover."));let _=(0,t.P6)("editorHoverWidget.border",P,n.NC("hoverBorder","Border color of the editor hover."));(0,t.P6)("editorHoverWidget.statusBarBackground",{dark:(0,t.$n)(W,.2),light:(0,t._j)(W,.05),hcDark:F,hcLight:F},n.NC("statusBarBackground","Background color of the editor hover status bar."));let G=(0,t.P6)("editorInlayHint.foreground",{dark:"#969696",light:"#969696",hcDark:i.Il.white,hcLight:i.Il.black},n.NC("editorInlayHintForeground","Foreground color of inline hints")),$=(0,t.P6)("editorInlayHint.background",{dark:(0,t.Zn)(g,.1),light:(0,t.Zn)(g,.1),hcDark:(0,t.Zn)(i.Il.white,.1),hcLight:(0,t.Zn)(g,.1)},n.NC("editorInlayHintBackground","Background color of inline hints")),Q=(0,t.P6)("editorInlayHint.typeForeground",G,n.NC("editorInlayHintForegroundTypes","Foreground color of inline hints for types")),z=(0,t.P6)("editorInlayHint.typeBackground",$,n.NC("editorInlayHintBackgroundTypes","Background color of inline hints for types")),j=(0,t.P6)("editorInlayHint.parameterForeground",G,n.NC("editorInlayHintForegroundParameter","Foreground color of inline hints for parameters")),K=(0,t.P6)("editorInlayHint.parameterBackground",$,n.NC("editorInlayHintBackgroundParameter","Background color of inline hints for parameters")),J=(0,t.P6)("editorLightBulb.foreground",{dark:"#FFCC00",light:"#DDB100",hcDark:"#FFCC00",hcLight:"#007ACC"},n.NC("editorLightBulbForeground","The color used for the lightbulb actions icon."));(0,t.P6)("editorLightBulbAutoFix.foreground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},n.NC("editorLightBulbAutoFixForeground","The color used for the lightbulb auto fix actions icon.")),(0,t.P6)("editorLightBulbAi.foreground",J,n.NC("editorLightBulbAiForeground","The color used for the lightbulb AI icon.")),(0,t.P6)("editor.snippetTabstopHighlightBackground",{dark:new i.Il(new i.VS(124,124,124,.3)),light:new i.Il(new i.VS(10,50,100,.2)),hcDark:new i.Il(new i.VS(124,124,124,.3)),hcLight:new i.Il(new i.VS(10,50,100,.2))},n.NC("snippetTabstopHighlightBackground","Highlight background color of a snippet tabstop.")),(0,t.P6)("editor.snippetTabstopHighlightBorder",null,n.NC("snippetTabstopHighlightBorder","Highlight border color of a snippet tabstop.")),(0,t.P6)("editor.snippetFinalTabstopHighlightBackground",null,n.NC("snippetFinalTabstopHighlightBackground","Highlight background color of the final tabstop of a snippet.")),(0,t.P6)("editor.snippetFinalTabstopHighlightBorder",{dark:"#525252",light:new i.Il(new i.VS(10,50,100,.5)),hcDark:"#525252",hcLight:"#292929"},n.NC("snippetFinalTabstopHighlightBorder","Highlight border color of the final tabstop of a snippet."));let X=new i.Il(new i.VS(155,185,85,.2)),Y=new i.Il(new i.VS(255,0,0,.2)),U=(0,t.P6)("diffEditor.insertedTextBackground",{dark:"#9ccc2c33",light:"#9ccc2c40",hcDark:null,hcLight:null},n.NC("diffEditorInserted","Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),rr=(0,t.P6)("diffEditor.removedTextBackground",{dark:"#ff000033",light:"#ff000033",hcDark:null,hcLight:null},n.NC("diffEditorRemoved","Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations."),!0);(0,t.P6)("diffEditor.insertedLineBackground",{dark:X,light:X,hcDark:null,hcLight:null},n.NC("diffEditorInsertedLines","Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.P6)("diffEditor.removedLineBackground",{dark:Y,light:Y,hcDark:null,hcLight:null},n.NC("diffEditorRemovedLines","Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.P6)("diffEditorGutter.insertedLineBackground",null,n.NC("diffEditorInsertedLineGutter","Background color for the margin where lines got inserted.")),(0,t.P6)("diffEditorGutter.removedLineBackground",null,n.NC("diffEditorRemovedLineGutter","Background color for the margin where lines got removed."));let ro=(0,t.P6)("diffEditorOverview.insertedForeground",null,n.NC("diffEditorOverviewInserted","Diff overview ruler foreground for inserted content.")),re=(0,t.P6)("diffEditorOverview.removedForeground",null,n.NC("diffEditorOverviewRemoved","Diff overview ruler foreground for removed content."));(0,t.P6)("diffEditor.insertedTextBorder",{dark:null,light:null,hcDark:"#33ff2eff",hcLight:"#374E06"},n.NC("diffEditorInsertedOutline","Outline color for the text that got inserted.")),(0,t.P6)("diffEditor.removedTextBorder",{dark:null,light:null,hcDark:"#FF008F",hcLight:"#AD0707"},n.NC("diffEditorRemovedOutline","Outline color for text that got removed.")),(0,t.P6)("diffEditor.border",{dark:null,light:null,hcDark:a,hcLight:a},n.NC("diffEditorBorder","Border color between the two text editors.")),(0,t.P6)("diffEditor.diagonalFill",{dark:"#cccccc33",light:"#22222233",hcDark:null,hcLight:null},n.NC("diffDiagonalFill","Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.")),(0,t.P6)("diffEditor.unchangedRegionBackground","sideBar.background",n.NC("diffEditor.unchangedRegionBackground","The background color of unchanged blocks in the diff editor.")),(0,t.P6)("diffEditor.unchangedRegionForeground","foreground",n.NC("diffEditor.unchangedRegionForeground","The foreground color of unchanged blocks in the diff editor.")),(0,t.P6)("diffEditor.unchangedCodeBackground",{dark:"#74747429",light:"#b8b8b829",hcDark:null,hcLight:null},n.NC("diffEditor.unchangedCodeBackground","The background color of unchanged code in the diff editor."));let rt=(0,t.P6)("widget.shadow",{dark:(0,t.Zn)(i.Il.black,.36),light:(0,t.Zn)(i.Il.black,.16),hcDark:null,hcLight:null},n.NC("widgetShadow","Shadow color of widgets such as find/replace inside the editor.")),rn=(0,t.P6)("widget.border",{dark:null,light:null,hcDark:a,hcLight:a},n.NC("widgetBorder","Border color of widgets such as find/replace inside the editor.")),ri=(0,t.P6)("toolbar.hoverBackground",{dark:"#5a5d5e50",light:"#b8b8b850",hcDark:null,hcLight:null},n.NC("toolbarHoverBackground","Toolbar background when hovering over actions using the mouse"));(0,t.P6)("toolbar.hoverOutline",{dark:null,light:null,hcDark:h,hcLight:h},n.NC("toolbarHoverOutline","Toolbar outline when hovering over actions using the mouse")),(0,t.P6)("toolbar.activeBackground",{dark:(0,t.$n)(ri,.1),light:(0,t._j)(ri,.1),hcDark:null,hcLight:null},n.NC("toolbarActiveBackground","Toolbar background when holding the mouse over actions"));let rc=(0,t.P6)("breadcrumb.foreground",(0,t.Zn)(c,.8),n.NC("breadcrumbsFocusForeground","Color of focused breadcrumb items.")),rd=(0,t.P6)("breadcrumb.background",m,n.NC("breadcrumbsBackground","Background color of breadcrumb items.")),rl=(0,t.P6)("breadcrumb.focusForeground",{light:(0,t._j)(c,.2),dark:(0,t.$n)(c,.1),hcDark:(0,t.$n)(c,.1),hcLight:(0,t.$n)(c,.1)},n.NC("breadcrumbsFocusForeground","Color of focused breadcrumb items.")),ra=(0,t.P6)("breadcrumb.activeSelectionForeground",{light:(0,t._j)(c,.2),dark:(0,t.$n)(c,.1),hcDark:(0,t.$n)(c,.1),hcLight:(0,t.$n)(c,.1)},n.NC("breadcrumbsSelectedForeground","Color of selected breadcrumb items."));(0,t.P6)("breadcrumbPicker.background",F,n.NC("breadcrumbsSelectedBackground","Background color of breadcrumb item picker."));let rh=i.Il.fromHex("#40C8AE").transparent(.5),ru=i.Il.fromHex("#40A6FF").transparent(.5),rg=i.Il.fromHex("#606060").transparent(.4),rs=(0,t.P6)("merge.currentHeaderBackground",{dark:rh,light:rh,hcDark:null,hcLight:null},n.NC("mergeCurrentHeaderBackground","Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0);(0,t.P6)("merge.currentContentBackground",(0,t.Zn)(rs,.4),n.NC("mergeCurrentContentBackground","Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0);let rk=(0,t.P6)("merge.incomingHeaderBackground",{dark:ru,light:ru,hcDark:null,hcLight:null},n.NC("mergeIncomingHeaderBackground","Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0);(0,t.P6)("merge.incomingContentBackground",(0,t.Zn)(rk,.4),n.NC("mergeIncomingContentBackground","Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0);let rf=(0,t.P6)("merge.commonHeaderBackground",{dark:rg,light:rg,hcDark:null,hcLight:null},n.NC("mergeCommonHeaderBackground","Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0);(0,t.P6)("merge.commonContentBackground",(0,t.Zn)(rf,.4),n.NC("mergeCommonContentBackground","Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0);let rC=(0,t.P6)("merge.border",{dark:null,light:null,hcDark:"#C3DF6F",hcLight:"#007ACC"},n.NC("mergeBorder","Border color on headers and the splitter in inline merge-conflicts."));(0,t.P6)("editorOverviewRuler.currentContentForeground",{dark:(0,t.Zn)(rs,1),light:(0,t.Zn)(rs,1),hcDark:rC,hcLight:rC},n.NC("overviewRulerCurrentContentForeground","Current overview ruler foreground for inline merge-conflicts.")),(0,t.P6)("editorOverviewRuler.incomingContentForeground",{dark:(0,t.Zn)(rk,1),light:(0,t.Zn)(rk,1),hcDark:rC,hcLight:rC},n.NC("overviewRulerIncomingContentForeground","Incoming overview ruler foreground for inline merge-conflicts.")),(0,t.P6)("editorOverviewRuler.commonContentForeground",{dark:(0,t.Zn)(rf,1),light:(0,t.Zn)(rf,1),hcDark:rC,hcLight:rC},n.NC("overviewRulerCommonContentForeground","Common ancestor overview ruler foreground for inline merge-conflicts."));let rb=(0,t.P6)("editorOverviewRuler.findMatchForeground",{dark:"#d186167e",light:"#d186167e",hcDark:"#AB5A00",hcLight:"#AB5A00"},n.NC("overviewRulerFindMatchForeground","Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations."),!0),rp=(0,t.P6)("editorOverviewRuler.selectionHighlightForeground","#A0A0A0CC",n.NC("overviewRulerSelectionHighlightForeground","Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations."),!0),rm=(0,t.P6)("problemsErrorIcon.foreground",N,n.NC("problemsErrorIconForeground","The color used for the problems error icon.")),rB=(0,t.P6)("problemsWarningIcon.foreground",L,n.NC("problemsWarningIconForeground","The color used for the problems warning icon.")),rF=(0,t.P6)("problemsInfoIcon.foreground",y,n.NC("problemsInfoIconForeground","The color used for the problems info icon.")),rv=(0,t.P6)("minimap.findMatchHighlight",{light:"#d18616",dark:"#d18616",hcDark:"#AB5A00",hcLight:"#0F4A85"},n.NC("minimapFindMatchHighlight","Minimap marker color for find matches."),!0),rP=(0,t.P6)("minimap.selectionOccurrenceHighlight",{light:"#c9c9c9",dark:"#676767",hcDark:"#ffffff",hcLight:"#0F4A85"},n.NC("minimapSelectionOccurrenceHighlight","Minimap marker color for repeating editor selections."),!0),rN=(0,t.P6)("minimap.selectionHighlight",{light:"#ADD6FF",dark:"#264F78",hcDark:"#ffffff",hcLight:"#0F4A85"},n.NC("minimapSelectionHighlight","Minimap marker color for the editor selection."),!0),rw=(0,t.P6)("minimap.infoHighlight",{dark:y,light:y,hcDark:S,hcLight:S},n.NC("minimapInfo","Minimap marker color for infos.")),rD=(0,t.P6)("minimap.warningHighlight",{dark:L,light:L,hcDark:I,hcLight:I},n.NC("overviewRuleWarning","Minimap marker color for warnings.")),rL=(0,t.P6)("minimap.errorHighlight",{dark:new i.Il(new i.VS(255,18,18,.7)),light:new i.Il(new i.VS(255,18,18,.7)),hcDark:new i.Il(new i.VS(255,50,50,1)),hcLight:"#B5200D"},n.NC("minimapError","Minimap marker color for errors.")),rI=(0,t.P6)("minimap.background",null,n.NC("minimapBackground","Minimap background color.")),ry=(0,t.P6)("minimap.foregroundOpacity",i.Il.fromHex("#000f"),n.NC("minimapForegroundOpacity",'Opacity of foreground elements rendered in the minimap. For example, "#000000c0" will render the elements with 75% opacity.'));(0,t.P6)("minimapSlider.background",(0,t.Zn)(f,.5),n.NC("minimapSliderBackground","Minimap slider background color.")),(0,t.P6)("minimapSlider.hoverBackground",(0,t.Zn)(C,.5),n.NC("minimapSliderHoverBackground","Minimap slider background color when hovering.")),(0,t.P6)("minimapSlider.activeBackground",(0,t.Zn)(b,.5),n.NC("minimapSliderActiveBackground","Minimap slider background color when clicked on.")),(0,t.P6)("charts.foreground",c,n.NC("chartsForeground","The foreground color used in charts.")),(0,t.P6)("charts.lines",(0,t.Zn)(c,.5),n.NC("chartsLines","The color used for horizontal lines in charts.")),(0,t.P6)("charts.red",N,n.NC("chartsRed","The red color used in chart visualizations.")),(0,t.P6)("charts.blue",y,n.NC("chartsBlue","The blue color used in chart visualizations.")),(0,t.P6)("charts.yellow",L,n.NC("chartsYellow","The yellow color used in chart visualizations.")),(0,t.P6)("charts.orange",rv,n.NC("chartsOrange","The orange color used in chart visualizations.")),(0,t.P6)("charts.green",{dark:"#89D185",light:"#388A34",hcDark:"#89D185",hcLight:"#374e06"},n.NC("chartsGreen","The green color used in chart visualizations.")),(0,t.P6)("charts.purple",{dark:"#B180D7",light:"#652D90",hcDark:"#B180D7",hcLight:"#652D90"},n.NC("chartsPurple","The purple color used in chart visualizations."));let rS=(0,t.P6)("input.background",{dark:"#3C3C3C",light:i.Il.white,hcDark:i.Il.black,hcLight:i.Il.white},n.NC("inputBoxBackground","Input box background.")),rA=(0,t.P6)("input.foreground",c,n.NC("inputBoxForeground","Input box foreground.")),rH=(0,t.P6)("input.border",{dark:null,light:null,hcDark:a,hcLight:a},n.NC("inputBoxBorder","Input box border.")),rT=(0,t.P6)("inputOption.activeBorder",{dark:"#007ACC",light:"#007ACC",hcDark:a,hcLight:a},n.NC("inputBoxActiveOptionBorder","Border color of activated options in input fields.")),rx=(0,t.P6)("inputOption.hoverBackground",{dark:"#5a5d5e80",light:"#b8b8b850",hcDark:null,hcLight:null},n.NC("inputOption.hoverBackground","Background color of activated options in input fields.")),rE=(0,t.P6)("inputOption.activeBackground",{dark:(0,t.Zn)(l,.4),light:(0,t.Zn)(l,.2),hcDark:i.Il.transparent,hcLight:i.Il.transparent},n.NC("inputOption.activeBackground","Background hover color of options in input fields.")),rO=(0,t.P6)("inputOption.activeForeground",{dark:i.Il.white,light:i.Il.black,hcDark:c,hcLight:c},n.NC("inputOption.activeForeground","Foreground color of activated options in input fields."));(0,t.P6)("input.placeholderForeground",{light:(0,t.Zn)(c,.5),dark:(0,t.Zn)(c,.5),hcDark:(0,t.Zn)(c,.7),hcLight:(0,t.Zn)(c,.7)},n.NC("inputPlaceholderForeground","Input box foreground color for placeholder text."));let rZ=(0,t.P6)("inputValidation.infoBackground",{dark:"#063B49",light:"#D6ECF2",hcDark:i.Il.black,hcLight:i.Il.white},n.NC("inputValidationInfoBackground","Input validation background color for information severity.")),rq=(0,t.P6)("inputValidation.infoForeground",{dark:null,light:null,hcDark:null,hcLight:c},n.NC("inputValidationInfoForeground","Input validation foreground color for information severity.")),rR=(0,t.P6)("inputValidation.infoBorder",{dark:"#007acc",light:"#007acc",hcDark:a,hcLight:a},n.NC("inputValidationInfoBorder","Input validation border color for information severity.")),rV=(0,t.P6)("inputValidation.warningBackground",{dark:"#352A05",light:"#F6F5D2",hcDark:i.Il.black,hcLight:i.Il.white},n.NC("inputValidationWarningBackground","Input validation background color for warning severity.")),rM=(0,t.P6)("inputValidation.warningForeground",{dark:null,light:null,hcDark:null,hcLight:c},n.NC("inputValidationWarningForeground","Input validation foreground color for warning severity.")),rW=(0,t.P6)("inputValidation.warningBorder",{dark:"#B89500",light:"#B89500",hcDark:a,hcLight:a},n.NC("inputValidationWarningBorder","Input validation border color for warning severity.")),r_=(0,t.P6)("inputValidation.errorBackground",{dark:"#5A1D1D",light:"#F2DEDE",hcDark:i.Il.black,hcLight:i.Il.white},n.NC("inputValidationErrorBackground","Input validation background color for error severity.")),rG=(0,t.P6)("inputValidation.errorForeground",{dark:null,light:null,hcDark:null,hcLight:c},n.NC("inputValidationErrorForeground","Input validation foreground color for error severity.")),r$=(0,t.P6)("inputValidation.errorBorder",{dark:"#BE1100",light:"#BE1100",hcDark:a,hcLight:a},n.NC("inputValidationErrorBorder","Input validation border color for error severity.")),rQ=(0,t.P6)("dropdown.background",{dark:"#3C3C3C",light:i.Il.white,hcDark:i.Il.black,hcLight:i.Il.white},n.NC("dropdownBackground","Dropdown background.")),rz=(0,t.P6)("dropdown.listBackground",{dark:null,light:null,hcDark:i.Il.black,hcLight:i.Il.white},n.NC("dropdownListBackground","Dropdown list background.")),rj=(0,t.P6)("dropdown.foreground",{dark:"#F0F0F0",light:c,hcDark:i.Il.white,hcLight:c},n.NC("dropdownForeground","Dropdown foreground.")),rK=(0,t.P6)("dropdown.border",{dark:rQ,light:"#CECECE",hcDark:a,hcLight:a},n.NC("dropdownBorder","Dropdown border.")),rJ=(0,t.P6)("button.foreground",i.Il.white,n.NC("buttonForeground","Button foreground color.")),rX=(0,t.P6)("button.separator",(0,t.Zn)(rJ,.4),n.NC("buttonSeparator","Button separator color.")),rY=(0,t.P6)("button.background",{dark:"#0E639C",light:"#007ACC",hcDark:null,hcLight:"#0F4A85"},n.NC("buttonBackground","Button background color.")),rU=(0,t.P6)("button.hoverBackground",{dark:(0,t.$n)(rY,.2),light:(0,t._j)(rY,.2),hcDark:rY,hcLight:rY},n.NC("buttonHoverBackground","Button background color when hovering.")),r0=(0,t.P6)("button.border",a,n.NC("buttonBorder","Button border color.")),r6=(0,t.P6)("button.secondaryForeground",{dark:i.Il.white,light:i.Il.white,hcDark:i.Il.white,hcLight:c},n.NC("buttonSecondaryForeground","Secondary button foreground color.")),r2=(0,t.P6)("button.secondaryBackground",{dark:"#3A3D41",light:"#5F6A79",hcDark:null,hcLight:i.Il.white},n.NC("buttonSecondaryBackground","Secondary button background color.")),r5=(0,t.P6)("button.secondaryHoverBackground",{dark:(0,t.$n)(r2,.2),light:(0,t._j)(r2,.2),hcDark:null,hcLight:null},n.NC("buttonSecondaryHoverBackground","Secondary button background color when hovering.")),r1=(0,t.P6)("radio.activeForeground",rO,n.NC("radioActiveForeground","Foreground color of active radio option.")),r4=(0,t.P6)("radio.activeBackground",rE,n.NC("radioBackground","Background color of active radio option.")),r8=(0,t.P6)("radio.activeBorder",rT,n.NC("radioActiveBorder","Border color of the active radio option.")),r7=(0,t.P6)("radio.inactiveForeground",null,n.NC("radioInactiveForeground","Foreground color of inactive radio option.")),r9=(0,t.P6)("radio.inactiveBackground",null,n.NC("radioInactiveBackground","Background color of inactive radio option.")),r3=(0,t.P6)("radio.inactiveBorder",{light:(0,t.Zn)(r1,.2),dark:(0,t.Zn)(r1,.2),hcDark:(0,t.Zn)(r1,.4),hcLight:(0,t.Zn)(r1,.2)},n.NC("radioInactiveBorder","Border color of the inactive radio option.")),or=(0,t.P6)("radio.inactiveHoverBackground",rx,n.NC("radioHoverBackground","Background color of inactive active radio option when hovering.")),oo=(0,t.P6)("checkbox.background",rQ,n.NC("checkbox.background","Background color of checkbox widget."));(0,t.P6)("checkbox.selectBackground",F,n.NC("checkbox.select.background","Background color of checkbox widget when the element it's in is selected."));let oe=(0,t.P6)("checkbox.foreground",rj,n.NC("checkbox.foreground","Foreground color of checkbox widget.")),ot=(0,t.P6)("checkbox.border",rK,n.NC("checkbox.border","Border color of checkbox widget."));(0,t.P6)("checkbox.selectBorder",d,n.NC("checkbox.select.border","Border color of checkbox widget when the element it's in is selected."));let on=(0,t.P6)("keybindingLabel.background",{dark:new i.Il(new i.VS(128,128,128,.17)),light:new i.Il(new i.VS(221,221,221,.4)),hcDark:i.Il.transparent,hcLight:i.Il.transparent},n.NC("keybindingLabelBackground","Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.")),oi=(0,t.P6)("keybindingLabel.foreground",{dark:i.Il.fromHex("#CCCCCC"),light:i.Il.fromHex("#555555"),hcDark:i.Il.white,hcLight:c},n.NC("keybindingLabelForeground","Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.")),oc=(0,t.P6)("keybindingLabel.border",{dark:new i.Il(new i.VS(51,51,51,.6)),light:new i.Il(new i.VS(204,204,204,.4)),hcDark:new i.Il(new i.VS(111,195,223)),hcLight:a},n.NC("keybindingLabelBorder","Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.")),od=(0,t.P6)("keybindingLabel.bottomBorder",{dark:new i.Il(new i.VS(68,68,68,.6)),light:new i.Il(new i.VS(187,187,187,.4)),hcDark:new i.Il(new i.VS(111,195,223)),hcLight:c},n.NC("keybindingLabelBottomBorder","Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.")),ol=(0,t.P6)("list.focusBackground",null,n.NC("listFocusBackground","List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),oa=(0,t.P6)("list.focusForeground",null,n.NC("listFocusForeground","List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),oh=(0,t.P6)("list.focusOutline",{dark:l,light:l,hcDark:h,hcLight:h},n.NC("listFocusOutline","List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),ou=(0,t.P6)("list.focusAndSelectionOutline",null,n.NC("listFocusAndSelectionOutline","List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.")),og=(0,t.P6)("list.activeSelectionBackground",{dark:"#04395E",light:"#0060C0",hcDark:null,hcLight:i.Il.fromHex("#0F4A85").transparent(.1)},n.NC("listActiveSelectionBackground","List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),os=(0,t.P6)("list.activeSelectionForeground",{dark:i.Il.white,light:i.Il.white,hcDark:null,hcLight:null},n.NC("listActiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),ok=(0,t.P6)("list.activeSelectionIconForeground",null,n.NC("listActiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),of=(0,t.P6)("list.inactiveSelectionBackground",{dark:"#37373D",light:"#E4E6F1",hcDark:null,hcLight:i.Il.fromHex("#0F4A85").transparent(.1)},n.NC("listInactiveSelectionBackground","List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),oC=(0,t.P6)("list.inactiveSelectionForeground",null,n.NC("listInactiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),ob=(0,t.P6)("list.inactiveSelectionIconForeground",null,n.NC("listInactiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),op=(0,t.P6)("list.inactiveFocusBackground",null,n.NC("listInactiveFocusBackground","List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),om=(0,t.P6)("list.inactiveFocusOutline",null,n.NC("listInactiveFocusOutline","List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),oB=(0,t.P6)("list.hoverBackground",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:i.Il.white.transparent(.1),hcLight:i.Il.fromHex("#0F4A85").transparent(.1)},n.NC("listHoverBackground","List/Tree background when hovering over items using the mouse.")),oF=(0,t.P6)("list.hoverForeground",null,n.NC("listHoverForeground","List/Tree foreground when hovering over items using the mouse.")),ov=(0,t.P6)("list.dropBackground",{dark:"#062F4A",light:"#D6EBFF",hcDark:null,hcLight:null},n.NC("listDropBackground","List/Tree drag and drop background when moving items over other items when using the mouse.")),oP=(0,t.P6)("list.dropBetweenBackground",{dark:d,light:d,hcDark:null,hcLight:null},n.NC("listDropBetweenBackground","List/Tree drag and drop border color when moving items between items when using the mouse.")),oN=(0,t.P6)("list.highlightForeground",{dark:"#2AAAFF",light:"#0066BF",hcDark:l,hcLight:l},n.NC("highlight","List/Tree foreground color of the match highlights when searching inside the list/tree.")),ow=(0,t.P6)("list.focusHighlightForeground",{dark:oN,light:(0,t.NS)(og,oN,"#BBE7FF"),hcDark:oN,hcLight:oN},n.NC("listFocusHighlightForeground","List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree."));(0,t.P6)("list.invalidItemForeground",{dark:"#B89500",light:"#B89500",hcDark:"#B89500",hcLight:"#B5200D"},n.NC("invalidItemForeground","List/Tree foreground color for invalid items, for example an unresolved root in explorer.")),(0,t.P6)("list.errorForeground",{dark:"#F88070",light:"#B01011",hcDark:null,hcLight:null},n.NC("listErrorForeground","Foreground color of list items containing errors.")),(0,t.P6)("list.warningForeground",{dark:"#CCA700",light:"#855F00",hcDark:null,hcLight:null},n.NC("listWarningForeground","Foreground color of list items containing warnings."));let oD=(0,t.P6)("listFilterWidget.background",{light:(0,t._j)(F,0),dark:(0,t.$n)(F,0),hcDark:F,hcLight:F},n.NC("listFilterWidgetBackground","Background color of the type filter widget in lists and trees.")),oL=(0,t.P6)("listFilterWidget.outline",{dark:i.Il.transparent,light:i.Il.transparent,hcDark:"#f38518",hcLight:"#007ACC"},n.NC("listFilterWidgetOutline","Outline color of the type filter widget in lists and trees.")),oI=(0,t.P6)("listFilterWidget.noMatchesOutline",{dark:"#BE1100",light:"#BE1100",hcDark:a,hcLight:a},n.NC("listFilterWidgetNoMatchesOutline","Outline color of the type filter widget in lists and trees, when there are no matches.")),oy=(0,t.P6)("listFilterWidget.shadow",rt,n.NC("listFilterWidgetShadow","Shadow color of the type filter widget in lists and trees."));(0,t.P6)("list.filterMatchBackground",{dark:q,light:q,hcDark:null,hcLight:null},n.NC("listFilterMatchHighlight","Background color of the filtered match.")),(0,t.P6)("list.filterMatchBorder",{dark:V,light:V,hcDark:a,hcLight:h},n.NC("listFilterMatchHighlightBorder","Border color of the filtered match.")),(0,t.P6)("list.deemphasizedForeground",{dark:"#8C8C8C",light:"#8E8E90",hcDark:"#A7A8A9",hcLight:"#666666"},n.NC("listDeemphasizedForeground","List/Tree foreground color for items that are deemphasized."));let oS=(0,t.P6)("tree.indentGuidesStroke",{dark:"#585858",light:"#a9a9a9",hcDark:"#a9a9a9",hcLight:"#a5a5a5"},n.NC("treeIndentGuidesStroke","Tree stroke color for the indentation guides.")),oA=(0,t.P6)("tree.inactiveIndentGuidesStroke",(0,t.Zn)(oS,.4),n.NC("treeInactiveIndentGuidesStroke","Tree stroke color for the indentation guides that are not active.")),oH=(0,t.P6)("tree.tableColumnsBorder",{dark:"#CCCCCC20",light:"#61616120",hcDark:null,hcLight:null},n.NC("tableColumnsBorder","Table border color between columns.")),oT=(0,t.P6)("tree.tableOddRowsBackground",{dark:(0,t.Zn)(c,.04),light:(0,t.Zn)(c,.04),hcDark:null,hcLight:null},n.NC("tableOddRowsBackgroundColor","Background color for odd table rows."));(0,t.P6)("editorActionList.background",F,n.NC("editorActionListBackground","Action List background color.")),(0,t.P6)("editorActionList.foreground",v,n.NC("editorActionListForeground","Action List foreground color.")),(0,t.P6)("editorActionList.focusForeground",os,n.NC("editorActionListFocusForeground","Action List foreground color for the focused item.")),(0,t.P6)("editorActionList.focusBackground",og,n.NC("editorActionListFocusBackground","Action List background color for the focused item."));let ox=(0,t.P6)("menu.border",{dark:null,light:null,hcDark:a,hcLight:a},n.NC("menuBorder","Border color of menus.")),oE=(0,t.P6)("menu.foreground",rj,n.NC("menuForeground","Foreground color of menu items.")),oO=(0,t.P6)("menu.background",rQ,n.NC("menuBackground","Background color of menu items.")),oZ=(0,t.P6)("menu.selectionForeground",os,n.NC("menuSelectionForeground","Foreground color of the selected menu item in menus.")),oq=(0,t.P6)("menu.selectionBackground",og,n.NC("menuSelectionBackground","Background color of the selected menu item in menus.")),oR=(0,t.P6)("menu.selectionBorder",{dark:null,light:null,hcDark:h,hcLight:h},n.NC("menuSelectionBorder","Border color of the selected menu item in menus.")),oV=(0,t.P6)("menu.separatorBackground",{dark:"#606060",light:"#D4D4D4",hcDark:a,hcLight:a},n.NC("menuSeparatorBackground","Color of a separator menu item in menus.")),oM=(0,t.P6)("quickInput.background",F,n.NC("pickerBackground","Quick picker background color. The quick picker widget is the container for pickers like the command palette.")),oW=(0,t.P6)("quickInput.foreground",v,n.NC("pickerForeground","Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.")),o_=(0,t.P6)("quickInputTitle.background",{dark:new i.Il(new i.VS(255,255,255,.105)),light:new i.Il(new i.VS(0,0,0,.06)),hcDark:"#000000",hcLight:i.Il.white},n.NC("pickerTitleBackground","Quick picker title background color. The quick picker widget is the container for pickers like the command palette.")),oG=(0,t.P6)("pickerGroup.foreground",{dark:"#3794FF",light:"#0066BF",hcDark:i.Il.white,hcLight:"#0F4A85"},n.NC("pickerGroupForeground","Quick picker color for grouping labels.")),o$=(0,t.P6)("pickerGroup.border",{dark:"#3F3F46",light:"#CCCEDB",hcDark:i.Il.white,hcLight:"#0F4A85"},n.NC("pickerGroupBorder","Quick picker color for grouping borders.")),oQ=(0,t.P6)("quickInput.list.focusBackground",null,"",void 0,n.NC("quickInput.list.focusBackground deprecation","Please use quickInputList.focusBackground instead")),oz=(0,t.P6)("quickInputList.focusForeground",os,n.NC("quickInput.listFocusForeground","Quick picker foreground color for the focused item.")),oj=(0,t.P6)("quickInputList.focusIconForeground",ok,n.NC("quickInput.listFocusIconForeground","Quick picker icon foreground color for the focused item.")),oK=(0,t.P6)("quickInputList.focusBackground",{dark:(0,t.kw)(oQ,og),light:(0,t.kw)(oQ,og),hcDark:null,hcLight:null},n.NC("quickInput.listFocusBackground","Quick picker background color for the focused item."));(0,t.P6)("search.resultsInfoForeground",{light:c,dark:(0,t.Zn)(c,.65),hcDark:c,hcLight:c},n.NC("search.resultsInfoForeground","Color of the text in the search viewlet's completion message.")),(0,t.P6)("searchEditor.findMatchBackground",{light:(0,t.Zn)(q,.66),dark:(0,t.Zn)(q,.66),hcDark:q,hcLight:q},n.NC("searchEditor.queryMatch","Color of the Search Editor query matches.")),(0,t.P6)("searchEditor.findMatchBorder",{light:(0,t.Zn)(V,.66),dark:(0,t.Zn)(V,.66),hcDark:V,hcLight:V},n.NC("searchEditor.editorFindMatchBorder","Border color of the Search Editor query matches."))},27646:function(r,o,e){e.d(o,{$n:()=>b,Bt:()=>g,IP:()=>s,JV:()=>F,NS:()=>B,P6:()=>f,QO:()=>h,Zn:()=>p,_j:()=>C,kw:()=>m,n_:()=>u});var t=e(35146),n=e(15393),i=e(41264),c=e(4669),d=e(81294),l=e(89872),a=e(63580);function h(r){return`--vscode-${r.replace(/\./g,"-")}`}function u(r){return`var(${h(r)})`}function g(r,o){return`var(${h(r)}, ${o})`}let s={ColorContribution:"base.contributions.colors"},k=new class{constructor(){this._onDidChangeSchema=new c.Q5,this.onDidChangeSchema=this._onDidChangeSchema.event,this.colorSchema={type:"object",properties:{}},this.colorReferenceSchema={type:"string",enum:[],enumDescriptions:[]},this.colorsById={}}registerColor(r,o,e,t=!1,n){this.colorsById[r]={id:r,description:e,defaults:o,needsTransparency:t,deprecationMessage:n};let i={type:"string",format:"color-hex",defaultSnippets:[{body:"${1:#ff0000}"}]};return n&&(i.deprecationMessage=n),t&&(i.pattern="^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$",i.patternErrorMessage=a.NC("transparecyRequired","This color must be transparent or it will obscure content")),this.colorSchema.properties[r]={description:e,oneOf:[i,{type:"string",const:"default",description:a.NC("useDefault","Use the default color.")}]},this.colorReferenceSchema.enum.push(r),this.colorReferenceSchema.enumDescriptions.push(e),this._onDidChangeSchema.fire(),r}getColors(){return Object.keys(this.colorsById).map(r=>this.colorsById[r])}resolveDefaultColor(r,o){let e=this.colorsById[r];if(e?.defaults){var n;return function r(o,e){if(null===o);else if("string"==typeof o)return"#"===o[0]?i.Il.fromHex(o):e.getColor(o);else if(o instanceof i.Il)return o;else if("object"==typeof o)switch(o.op){case 0:return r(o.value,e)?.darken(o.factor);case 1:return r(o.value,e)?.lighten(o.factor);case 2:return r(o.value,e)?.transparent(o.factor);case 3:{let t=r(o.background,e);if(!t)return r(o.value,e);return r(o.value,e)?.makeOpaque(t)}case 4:for(let t of o.values){let o=r(t,e);if(o)return o}return;case 6:return r(e.defines(o.if)?o.then:o.else,e);case 5:{let t=r(o.value,e);if(!t)return;let n=r(o.background,e);if(!n)return t.transparent(o.factor*o.transparency);return t.isDarkerThan(n)?i.Il.getLighterColor(t,n,o.factor).transparent(o.transparency):i.Il.getDarkerColor(t,n,o.factor).transparent(o.transparency)}default:throw(0,t.vE)(o)}}(null!==(n=e.defaults)&&"object"==typeof n&&"light"in n&&"dark"in n?e.defaults[o.type]:e.defaults,o)}}getColorSchema(){return this.colorSchema}toString(){return Object.keys(this.colorsById).sort((r,o)=>{let e=+(-1!==r.indexOf(".")),t=+(-1!==o.indexOf("."));return e!==t?e-t:r.localeCompare(o)}).map(r=>`- \`${r}\`: ${this.colorsById[r].description}`).join("\n")}};function f(r,o,e,t,n){return k.registerColor(r,o,e,t,n)}function C(r,o){return{op:0,value:r,factor:o}}function b(r,o){return{op:1,value:r,factor:o}}function p(r,o){return{op:2,value:r,factor:o}}function m(...r){return{op:4,values:r}}function B(r,o,e){return{op:6,if:r,then:o,else:e}}function F(r,o,e,t){return{op:5,value:r,background:o,factor:e,transparency:t}}l.B.add(s.ColorContribution,k);let v="vscode://schemas/workbench-colors",P=l.B.as(d.I.JSONContribution);P.registerSchema(v,k.getColorSchema());let N=new n.pY(()=>P.notifySchemaChanged(v),200);k.onDidChangeSchema(()=>{N.isScheduled()||N.schedule()})},92321:function(r,o,e){var t,n;function i(r){return r===t.HIGH_CONTRAST_DARK||r===t.HIGH_CONTRAST_LIGHT}function c(r){return r===t.DARK||r===t.HIGH_CONTRAST_DARK}e.d(o,{_T:()=>c,c3:()=>i,eL:()=>t}),(n=t||(t={})).DARK="dark",n.LIGHT="light",n.HIGH_CONTRAST_DARK="hcDark",n.HIGH_CONTRAST_LIGHT="hcLight"}}]);