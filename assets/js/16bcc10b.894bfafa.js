/*! For license information please see 16bcc10b.894bfafa.js.LICENSE.txt */
"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[45233],{21020:(e,n,o)=>{var r=o(96540),t=Symbol.for("react.element"),s=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,l=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,o){var r,s={},d=null,c=null;for(r in void 0!==o&&(d=""+o),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(c=n.ref),n)i.call(n,r)&&!a.hasOwnProperty(r)&&(s[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===s[r]&&(s[r]=n[r]);return{$$typeof:t,type:e,key:d,ref:c,props:s,_owner:l.current}}n.Fragment=s,n.jsx=d,n.jsxs=d},28235:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Recommend_Helpers","title":"Recommend Helpers","description":"To facilitate complex points in the Connector, the IConnectorsUtilities class provides several helpful utilities. These helpers simplify common tasks and ensure adherence to Travelgate standards.","source":"@site/docs/apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Recommend_Helpers.mdx","sourceDirName":"apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers","slug":"/apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Recommend_Helpers","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Recommend_Helpers","draft":false,"unlisted":false,"editUrl":"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/Recommend_Helpers.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Recommend Helpers","sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"FormTest","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/Tools_and_Helpers/FormTest_Documentation"},"next":{"title":"Develop a Connector","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/Develop_from_Scratch/"}}');var t=o(74848),s=o(28453);const i={title:"Recommend Helpers",sidebar_position:3},l="Recommend Helpers",a={},d=[{value:"<strong>Utilities Overview</strong>",id:"utilities-overview",level:2},{value:"<strong>IOptionsFromRoomsGenerator</strong>",id:"ioptionsfromroomsgenerator",level:3},{value:"<strong>IOptionsGenerator</strong>",id:"ioptionsgenerator",level:3},{value:"<strong>ICancelPenaltyManager</strong>",id:"icancelpenaltymanager",level:3},{value:"<strong>ICountryConverter</strong>",id:"icountryconverter",level:3},{value:"<strong>IMetadataConnectorsService</strong>",id:"imetadataconnectorsservice",level:3}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"recommend-helpers",children:"Recommend Helpers"})}),"\n",(0,t.jsxs)(n.p,{children:["To facilitate complex points in the Connector, the ",(0,t.jsx)(n.code,{children:"IConnectorsUtilities"})," class provides several helpful utilities. These helpers simplify common tasks and ensure adherence to Travelgate standards."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"utilities-overview",children:(0,t.jsx)(n.strong,{children:"Utilities Overview"})}),"\n",(0,t.jsx)(n.h3,{id:"ioptionsfromroomsgenerator",children:(0,t.jsx)(n.strong,{children:"IOptionsFromRoomsGenerator"})}),"\n",(0,t.jsxs)(n.p,{children:["This utility is particularly useful in the ",(0,t.jsx)(n.code,{children:"Search"})," operation for suppliers that return rooms instead of pre-made options. Since Travelgate operates with options, this generator accumulates rooms and applies business rules to generate valid options."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": Recommended when the supplier provides rooms without combining them into options."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public interface IOptionsFromRoomsGenerator\r\n{\r\n  bool TryAddHotelRoom(\r\n    string hotelCode,           // Unique identifier of the hotel the room belongs to\r\n    string boardCode,           // Code representing the room's board type (e.g. AI)\r\n    RoomCombineExtended roomCombineExtended, // Contains detailed info about the room and combination logic\r\n    int combinationKey,         // Key used to handle room combinations (optional in overloads). \r\n                                // If specified, only items with the same key will be combined\r\n    Location location = null,   // Optional: info about the hotel's location (e.g. city, coordinates)\r\n    string hotelName = null,    // Optional: name of the hotel\r\n    string boardName = null     // Optional: name of the board type (e.g. \"All Inclusive\")\r\n  );\r\n}\r\n\r\n//Real example of how can it be used (injected):\r\n\r\nvar roomCombineExtended = MethodThatReturnsARoomCombineExtended(supplierRoomData)\r\nvar location = MethodThatReturnsALocation(supplierLocationData)\r\n\r\n_optionsFromRoomsGenerator.TryAddHotelRoom(\r\n                    supplier.HotelCode,\r\n                    supplier.BoardCode,\r\n                    roomCombineExtended,\r\n                    0\r\n                    location,\r\n                    supplier.HotelName,\r\n                    supplier.BoardName);\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"ioptionsgenerator",children:(0,t.jsx)(n.strong,{children:"IOptionsGenerator"})}),"\n",(0,t.jsxs)(n.p,{children:["Similar to ",(0,t.jsx)(n.code,{children:"IOptionsFromRoomsGenerator"}),", this utility accumulates pre-made options provided by the supplier. It applies Travelgate's business rules to ensure compliance with Travelgate standards."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": Recommended when the supplier already provides pre-made options in the response."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public interface IOptionsGenerator\r\n{\r\n  bool TryAddHotelOption(\r\n    string hotelCode,           // Unique identifier of the hotel the room belongs to\r\n    string boardCode,           // Code representing the room\'s board type (e.g. AI)\r\n    Option option,              // Contains detailed info about the room and combination logic\r\n    string hotelName = null,    // Optional: name of the hotel\r\n    string boardName = null     // Optional: name of the board type (e.g. "All Inclusive")\r\n  );\r\n}\r\n\r\n//Real example of how can it be used (injected):\r\n\r\nvar option = MethodThatReturnsAnOption(supplierOptionData)\r\n\r\n_optionsGenerator.TryAddHotelOption(\r\n                    supplier.HotelCode,\r\n                    supplier.BoardCode,\r\n                    option,\r\n                    supplier.HotelName,\r\n                    supplier.BoardName);\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"icancelpenaltymanager",children:(0,t.jsx)(n.strong,{children:"ICancelPenaltyManager"})}),"\n",(0,t.jsx)(n.p,{children:"Handles the transformation and management of supplier cancellation policies, ensuring compatibility with the standardized Travelgate format."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": Essential for operations like ",(0,t.jsx)(n.code,{children:"Quote"})," or ",(0,t.jsx)(n.code,{children:"Cancel"})," to standardize cancellation policies provided by the supplier."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["[TODO inject code of ",(0,t.jsx)(n.code,{children:"ICancelPenaltyManager"}),"]"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"icountryconverter",children:(0,t.jsx)(n.strong,{children:"ICountryConverter"})}),"\n",(0,t.jsx)(n.p,{children:"Converts ISO country codes and names, facilitating compatibility between supplier-specific formats and standardized ISO formats."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": Useful in ",(0,t.jsx)(n.code,{children:"Search"})," or ",(0,t.jsx)(n.code,{children:"Book"})," operations where supplier-specific country formats need to align with Travelgate standards."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["[TODO inject code of ",(0,t.jsx)(n.code,{children:"ICountryConverter"}),"]"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"imetadataconnectorsservice",children:(0,t.jsx)(n.strong,{children:"IMetadataConnectorsService"})}),"\n",(0,t.jsx)(n.p,{children:"Provides access to metadata utilities, allowing retrieval of supplier metadata, business rule configurations, and other operational data required for processing requests."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": Ideal for dynamic retrieval and use of metadata, enabling adaptable and consistent Connector operations."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["[TODO inject code of ",(0,t.jsx)(n.code,{children:"IMetadataConnectorsService"}),"]"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"These helpers are recommended for ensuring that your Connector adheres to Travelgate's standards and simplifies the handling of complex operations."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var r=o(96540);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}},74848:(e,n,o)=>{e.exports=o(21020)}}]);