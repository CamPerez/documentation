"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["62238"],{31084:function(e,n,l){l.r(n),l.d(n,{frontMatter:()=>r,toc:()=>c,default:()=>u,metadata:()=>i,assets:()=>s,contentTitle:()=>a});var i=JSON.parse('{"id":"apis/for-sellers/connectors-pull-developers-api/tools-and-helpers/policies-helpers/policies-helpers","title":"policies-helpers","description":"Helpers for Mapping Supplier Policies Data","source":"@site/docs/apis/for-sellers/connectors-pull-developers-api/tools-and-helpers/policies-helpers/policies-helpers.mdx","sourceDirName":"apis/for-sellers/connectors-pull-developers-api/tools-and-helpers/policies-helpers","slug":"/apis/for-sellers/connectors-pull-developers-api/tools-and-helpers/policies-helpers/","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/tools-and-helpers/policies-helpers/","draft":false,"unlisted":false,"editUrl":"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/connectors-pull-developers-api/tools-and-helpers/policies-helpers/policies-helpers.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Recommended Helpers","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/tools-and-helpers/recommended-helpers"},"next":{"title":"Price Helpers","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/tools-and-helpers/price-helpers/"}}'),t=l(85893),o=l(50065);let r={},a=void 0,s={},c=[{value:"<strong>Helpers for Mapping Supplier Policies Data</strong>",id:"helpers-for-mapping-supplier-policies-data",level:3},{value:"<strong>CancelPenaltyFromDateWithoutTimeZone</strong>",id:"cancelpenaltyfromdatewithouttimezone",level:4},{value:"<strong>CancelPenaltyFromDateWithTimeZone</strong>",id:"cancelpenaltyfromdatewithtimezone",level:4},{value:"<strong>CancelPenaltyFromHours</strong>",id:"cancelpenaltyfromhours",level:4},{value:"<strong>CancelPoliciesCombiner</strong>",id:"cancelpoliciescombiner",level:3}];function p(e){let n={blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"helpers-for-mapping-supplier-policies-data",children:(0,t.jsx)(n.strong,{children:"Helpers for Mapping Supplier Policies Data"})}),"\n",(0,t.jsx)(n.p,{children:"To accurately map supplier cancellation policies to our internal model, you can use one of the following helper methods depending on the supplier data format:"}),"\n",(0,t.jsx)(n.h4,{id:"cancelpenaltyfromdatewithouttimezone",children:(0,t.jsx)(n.strong,{children:"CancelPenaltyFromDateWithoutTimeZone"})}),"\n",(0,t.jsxs)(n.p,{children:["Use this method when the supplier provides a deadline date ",(0,t.jsx)(n.strong,{children:"without time zone"})," information."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public CancelPenalty CancelPenaltyFromDateWithoutTimeZone(\n    DateTime checkIn,\n    PenaltyType penaltyType,\n    Currency currency,\n    double value,\n    string deadLineWithoutTimeZone,\n    string dateFormat,\n    TimeZoneEnum timeZone\n);\n\n//Example of how should it be implemented:\n\n// Sample data\nDateTime checkIn = supplier.CheckIn; //If supplier does not return checkIn, it can also be obtained by the request\nPenaltyType penaltyType = PenaltyType.Amount; // Example enum value\nCurrency currency = Currency.USD; // Example enum value\ndouble value = supplier.Price; // "150.00", Price given by the supplier;\nstring deadLineWithoutTimeZone = supplier.DeadlineWithoutTimezone; //"2025-07-10", Supplier penalty deadline without timezone;\nstring dateFormat = "yyyy-MM-dd"; //Supplier date format\nTimeZoneEnum timeZone = TimeZoneEnum.UTC14; // Example enum value, check the real value with supplier\n\n// Method call\nCancelPenalty result = _connectorsUtilities.CancelPenaltyManager.CancelPenaltyFromDateWithoutTimeZone(\n    checkIn,\n    penaltyType,\n    currency,\n    value,\n    deadLineWithoutTimeZone,\n    dateFormat,\n    timeZone\n);\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Assumes no time zone is present (e.g., no "Z" or UTC offset).'}),"\n",(0,t.jsxs)(n.li,{children:["Requires manual timezone configuration. If the documentation does not specify it, use ",(0,t.jsx)(n.code,{children:"TimeZoneEnum.Unknown"}),", which applies a -14h safety offset."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancelpenaltyfromdatewithtimezone",children:(0,t.jsx)(n.strong,{children:"CancelPenaltyFromDateWithTimeZone"})}),"\n",(0,t.jsxs)(n.p,{children:["Use this method when the deadline value ",(0,t.jsx)(n.strong,{children:"includes time zone"})," information explicitly."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public CancelPenalty CancelPenaltyFromDateWithTimeZone(\n    DateTime checkIn,\n    PenaltyType penaltyType,\n    Currency currency,\n    double value,\n    string deadLineWithTimeZone,\n    string dateFormat\n);\n\n// Example of how should it be implemented:\n\n// Sample data\nDateTime checkIn = supplier.CheckIn; // If supplier does not return checkIn, it can also be obtained by the request\nPenaltyType penaltyType = PenaltyType.Amount; // Example enum value\nCurrency currency = Currency.USD; // Example enum value\ndouble value = supplier.Price; // "150.00", Price given by the supplier;\nstring deadLineWithTimeZone = supplier.DeadlineWithTimezone; //"2025-07-10T23:59:59+14:00" Supplier penalty deadline with timezone\nstring dateFormat = "yyyy-MM-ddTHH:mm:sszzz"; // Supplier date format with timezone\n\n// Method call\nCancelPenalty result = _connectorsUtilities.CancelPenaltyManager.CancelPenaltyFromDateWithTimeZone(\n    checkIn,\n    penaltyType,\n    currency,\n    value,\n    deadLineWithTimeZone,\n    dateFormat\n);\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Parses and respects the timezone embedded in the deadline string."}),"\n",(0,t.jsx)(n.li,{children:"No additional time zone logic required."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"cancelpenaltyfromhours",children:(0,t.jsx)(n.strong,{children:"CancelPenaltyFromHours"})}),"\n",(0,t.jsx)(n.p,{children:"Use this method when the supplier defines penalties as a number of hours before check-in (not an absolute timestamp)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public CancelPenalty CancelPenaltyFromHours(\n    uint hoursBefore,\n    PenaltyType penaltyType,\n    Currency currency,\n    double value,\n    DateTime date,\n    TimeZoneEnum timeZone\n);\n\n// Example of how should it be implemented:\n\n// Sample data\nuint hoursBefore = supplier.HoursBefore; //"48", Supplier states penalty applies 48 hours before the specified date\nPenaltyType penaltyType = PenaltyType.Amount; // Example enum value\nCurrency currency = Currency.USD; // Example enum value\ndouble value = supplier.Price; // "150.00", Price given by the supplier;\nDateTime date = supplier.CheckIn; // Penalty applies based on check-in date\nTimeZoneEnum timeZone = TimeZoneEnum.UTC14; // Example enum value, check the real value with supplier\n\n// Method call\nCancelPenalty result = _connectorsUtilities.CancelPenaltyManager.CancelPenaltyFromHours(\n    hoursBefore,\n    penaltyType,\n    currency,\n    value,\n    date,\n    timeZone\n);\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Converts a relative ",(0,t.jsx)(n.code,{children:"hoursBefore"})," value into an absolute UTC deadline."]}),"\n",(0,t.jsx)(n.li,{children:"Time zone must be provided manually or as part of an integration agreement."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"cancelpoliciescombiner",children:(0,t.jsx)(n.strong,{children:"CancelPoliciesCombiner"})}),"\n",(0,t.jsx)(n.p,{children:"Handles the transformation and management of supplier cancellation policies, ensuring compatibility with the standardized Travelgate format."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": Essential for operations like ",(0,t.jsx)(n.code,{children:"Quote"})," or ",(0,t.jsx)(n.code,{children:"Cancel"})," to standardize cancellation policies provided by the supplier."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"int numberOfRooms = supplier.NumberOfRooms; // 2 rooms\nbool policiesWithGross = supplier.IsGrossPrice; // Check if policies are with gross\nDateTime checkIn = supplier.CheckIn; //It can also be obtained by the request\nint nights = supplier.Nights;\n\nCancelPoliciesCombiner policiesCombiner = new CancelPoliciesCombiner(numberOfRooms, policiesWithGross, checkIn, nights);\n\nforeach (Room supplierRoom in supplier.Rooms)\n{\n    //Use policies and price helpers in order to build them\n    policiesCombiner.Add(new CancelPolicy(), new Price());\n}\n\n//TryGet method will return a valid OptionCancelPolicy\npoliciesCombiner.TryGet(out OptionCancelPolicy cancelPolicy);\n"})}),"\n",(0,t.jsx)(n.hr,{})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},50065:function(e,n,l){l.d(n,{Z:()=>a,a:()=>r});var i=l(67294);let t={},o=i.createContext(t);function r(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);