"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["69843"],{39464:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>o,toc:()=>d,default:()=>p,metadata:()=>r,assets:()=>a,contentTitle:()=>l});var r=JSON.parse('{"id":"apis/for-sellers/connectors-pull-developers-api/api-reference/amenity","title":"Amenity","description":"Represents an amenity associated with an accommodation, either in the room or option level.","source":"@site/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/amenity.md","sourceDirName":"apis/for-sellers/connectors-pull-developers-api/api-reference","slug":"/apis/for-sellers/connectors-pull-developers-api/api-reference/amenity","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/amenity","draft":false,"unlisted":false,"editUrl":"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/amenity.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"AdviseMessageLevel","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/advisemessagelevel"},"next":{"title":"AmenityType","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/amenitytype"}}'),i=n(85893),s=n(50065);let o={},l="Amenity",a={},d=[{value:"Properties",id:"properties",level:2}];function c(e){let t={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"amenity",children:"Amenity"})}),"\n",(0,i.jsx)(t.p,{children:"Represents an amenity associated with an accommodation, either in the room or option level."}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Code"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"A unique code that identifies the amenity."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Type"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/docs/apis/for-sellers/connectors-pull-developers-api/api-reference/amenitytype",children:"AmenityType"})}),(0,i.jsx)(t.td,{children:"The type of the amenity, defined by AmenityType."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Value"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"The value associated with the amenity."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Texts"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"Additional textual information or description for the amenity."})]})]})]})]})}function p(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},50065:function(e,t,n){n.d(t,{Z:()=>l,a:()=>o});var r=n(67294);let i={},s=r.createContext(i);function o(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);